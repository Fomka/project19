*&---------------------------------------------------------------------*
*& Report  ZPMP006
*&
*&---------------------------------------------------------------------*
*&   Программа для ведения базы данных по программному обеспечению, входящему
*& в состав автоматизированных систем управления технологическим процессом
*& (АСУТП) и средств измерения (СИ).
*&
*----------------------------------------------------------------------------
*  Префиксы в названиях
*    g = global, глобальное объявление (не используется в подпрограммах)
*    l = local, локальное объявление
*
*    t = table, таблица
*    s = structure, структура
*    v = value, переменная
*    c = constant, константа
*    f = field-symbol, указатель
*
*    i = input, входной параметр
*    o = output, выходной параметр
*
*    ty_  = type, тип
*    ty_s = type of structure, тип структуры
*    ty_t = type of table, тип таблицы
*--------------------------------------------------------------------*
Report  ZPMP006.

Constants:
  gc_true type boolean value 'X',
  gc_false type boolean value ' ',
  gc_asterisk type c length 1 value '*',
  begin of gc_version,
    major type n length 1 value '0',
    minor type n length 2 value '47',
  end of gc_version,
  begin of gcs,
  "Коды иконок из вызова метода cl_icon->get_icon для...
    icon_delete type iconname value '@B_DELE@', "... 'ICON_DELETE'
    icon_undelete type iconname value '@F_UNDO@', "... 'ICON_SYSTEM_UNDO'
    icon_excel type iconname value '@X__XLS@', "... 'ICON_XLS'
    werks type T499S-WERKS value '1000', "номер завода, для проверки местоположений
  "Select-options
    begin of so,
      begin of sign,
        include type c length 1 value 'I',
        exclude type c length 1 value 'E',
      end of sign,
      begin of option,
        equals type c length 2 value 'EQ',
        not_equals type c length 2 value 'NE',
        contains_pattern type c length 2 value 'CP',
      end of option,
    end of so,
    begin of permission_string,
      create type ZPM_USR-OPERATION value 'CREATE',
      change type ZPM_USR-OPERATION value 'CHANGE',
      view type ZPM_USR-OPERATION value 'VIEW',
      delete type ZPM_USR-OPERATION value 'DELETE',
      all type ZPM_USR-OPERATION value 'ALL',
    end of permission_string,
    begin of commands,
      begin of alv, "Для ALV-грида
        delete type sy-ucomm value 'DELETE',
        undelete type sy-ucomm value 'UNDELETE',
        excel type sy-ucomm value 'EXCEL',
      end of alv,
      "Общие для всех экранов
      help type sy-ucomm value 'HELP',
      version type sy-ucomm value 'VERSION',
      begin of sel_screen, "Для экрана выбора
        goto_new type sy-ucomm value 'GOTO_NEW', "Изменил? Ищи user-command goto_new
        goto_search type sy-ucomm value 'GOTO_SEARCH', "Изменил? Ищи user-command goto_search
        online type sy-ucomm value 'ONLI',
      end of sel_screen,
      begin of change_screen,
        save type sy-ucomm value 'SAVE',
      end of change_screen,
      begin of new_screen,
        save type sy-ucomm value 'SAVE',
      end of new_screen,
    end of commands,
    begin of screens,
      begin of status,
        min type gui_status value '0001', "Минимум функций
        save type gui_status value '0002',"То же + сохранение
      end of status,
      begin of data_create, "Экран для ввода новых записей, режим CREATE
        number type i value 10,
        title type gui_title value '0010',
      end of data_create,
      begin of data_change, "Экран для изменения записей, режим CHANGE
        number type i value 20,
        title type gui_title value '0020',
      end of data_change,
      begin of data_view, "Экран для просмотра записей, режим VIEW
        number type i value 30,
        title type gui_title value '0030',
      end of data_view,
      begin of sel_screen,
        number type i value 1000,
        group_create type screen-group1 value 'CRE',"Изменил? Ищи modif id CRE
        group_change type screen-group1 value 'CHA',"Изменил? Ищи modif id CHA
        group_stort_restriction_1 type screen-group1 value 'ID1',"Изменил? Ищи modif id ID1
        group_stort_restriction_2 type screen-group1 value 'ID2',"Изменил? Ищи modif id ID2
      end of sel_screen,
    end of screens,
    begin of alv, "общее для гридов (ALV-Grid)
      begin of color,
        default type c length 4 value '', "белый для режима редактирования
        lightred type c length 4 value 'C600', "красный (6), не усиленный (0)
        red type c length 4 value 'C610', "красный (6), усиленный (1)
      end of color,
      begin of toolbar,
        begin of button_type,
          normal type stb_button-butn_type value 0, "Обычная кнопка
          menu_default type stb_button-butn_type value 1, "Меню с умолчанием
          menu type stb_button-butn_type value 2, "Меню без кнопки по умолчанию
          separator type stb_button-butn_type value 3, "Разделитель
          radio type stb_button-butn_type value 4, "Радиокнопка
          checkbox type stb_button-butn_type value 5, "Кнопка-галочка
          menu_entry type stb_button-butn_type value 6, "Элемент меню
        end of button_type,
      end of toolbar,
      begin of variant_save_modes, "Как можно сохранять внешний вид грида?
        only_user type c length 1 value 'U', " только для пользователя — 'U'
        only_global type c length 1 value 'X',  "только глобально — 'X'
        all type c length 1 value 'A',          "обоими способами — 'A'
      end of variant_save_modes,
      begin of stable_refresh, "при обновлении грида не сдвигать полосу прокрутки по ...
        row type lvc_s_stbl-row value gc_true, "... вертикали
        col type lvc_s_stbl-col value gc_true, "... горизонтали
      end of stable_refresh,
      begin of sel_mode,
        d type lvc_s_layo-sel_mode value 'D', "Можно выбирать отдельную ячейку
      end of sel_mode,
    end of alv,
    begin of transactions,
      begin of equip_view,
        tcode type TCODE value 'IE03',
        parid type TPARA-PARAMID value 'EQN',
      end of equip_view,
    end of transactions,
    begin of data_table,
      table_name type TABNAME value 'ZPMP006_1',
      key_mandt type NAME_FELD value 'MANDT',
      key_unique_index type NAME_FELD value 'UNIQUE_INDEX',
      stort type NAME_FELD value 'STORT',
      equnr type NAME_FELD value 'EQUNR',
      type type NAME_FELD value 'TYPE',
      serge type NAME_FELD value 'SERGE',
      equipment_name type NAME_FELD value 'EQUIPMENT_NAME',
      manufact_name type NAME_FELD value 'MANUFACT_NAME',
      manufact_place type NAME_FELD value 'MANUFACT_PLACE',
      project type NAME_FELD value 'PROJECT',
      date_start type NAME_FELD value 'DATE_START',
      software_name type NAME_FELD value 'SOFTWARE_NAME',
      version_original type NAME_FELD value 'VERSION_ORIGINAL',
      version_mod type NAME_FELD value 'VERSION_MOD',
      dev_environment type NAME_FELD value 'DEV_ENVIRONMENT',
      mod_cause type NAME_FELD value 'MOD_CAUSE',
      mod_worker type NAME_FELD value 'MOD_WORKER',
      mod_date type NAME_FELD value 'MOD_DATE',
      num_of_copies type NAME_FELD value 'NUM_OF_COPIES',
      commentary type NAME_FELD value 'COMMENTARY',
      deleted type NAME_FELD value 'DELETED',
      change_date type NAME_FELD value 'CHANGE_DATE',
      change_time type NAME_FELD value 'CHANGE_TIME',
      change_name type NAME_FELD value 'CHANGE_NAME',
      alv_row_color type NAME_FELD value 'ALV_ROW_COLOR',
      alv_deleted type NAME_FELD value 'ALV_DELETED',
    end of data_table,
  end of gcs.

*&-------------------------------------------------------------------*
*& Обработчик событий для всех типов ALV-гридов, объявление
*&-------------------------------------------------------------------*
Class lcl_grid_event_handler definition final.
  Public section.
    Methods:
      handle_toolbar "Для добавления своих кнопок в панель инструментов
        for event toolbar of cl_gui_alv_grid
          importing sender e_object e_interactive,
      handle_user_command
        for event user_command of cl_gui_alv_grid
          importing sender e_ucomm,
      handle_hotspot_click
        for event hotspot_click of cl_gui_alv_grid
          importing sender e_column_id es_row_no,
      handle_double_click
        for event double_click of cl_gui_alv_grid
          importing sender e_column es_row_no,
      handle_onf4
        for event onf4 of cl_gui_alv_grid
          importing sender e_fieldname e_fieldvalue es_row_no er_event_data,
      handle_data_changed
        for event data_changed of cl_gui_alv_grid
          importing sender er_data_changed.
  Private section.
    "Пусто
Endclass.

Types:
  begin of ty_s_string,
    string type string,
  end of ty_s_string,
  ty_t_strings type standard table of ty_s_string,
  ty_t_data type ZPMP006_1_TABLE_TYPE,
  ty_s_data type line of ty_t_data,
  begin of ty_s_alv,
    begin of 01,
      r_grid type ref to cl_gui_alv_grid,
      r_handler type ref to lcl_grid_event_handler,
      r_cont type ref to cl_gui_docking_container,
      t_fcat type lvc_t_fcat,
      t_sort type lvc_t_sort,
      t_excl type ui_functions,
      t_f4 type lvc_t_f4,
      s_layo type lvc_s_layo,
      s_vari type disvariant,
      v_save type c,
    end of 01,
  end of ty_s_alv.

Data:
"Ограничения на поле ZPMP006_1-STORT "Местоположение"
  gt_create_stort_restrictions type ty_t_strings, "для операции CREATE
  gt_change_stort_restrictions type ty_t_strings, "для операции CHANGE
  "gv_r_cre – эта глобальная переменная определена как Selection-screen comment
  "gv_r_cha – эта глобальная переменная определена как Selection-screen comment

  gt_data type ty_t_data,
  gt_data_before type ty_t_data, "Состояние gt_data при переходе на экран изменений
  gv_row_count type i,
  begin of gs_permissions,
    create type boolean value gc_false,
    change type boolean value gc_false,
    view type boolean value gc_false,
    delete type boolean value gc_false,
    all type boolean value gc_false,
  end of gs_permissions,
  gs_alv type ty_s_alv.


*&-------------------------------------------------------------------*
*& Обработчик событий для всех типов ALV-гридов, реализация
*&-------------------------------------------------------------------*
Class lcl_grid_event_handler implementation.
  Method handle_toolbar.
    "Переключение между гридами
    Case sender.
      When gs_alv-01-r_grid.
        Perform alv_1_handle_toolbar using e_object.
      When others.
        Message i000(SU) with 'Событие toolbar' 'не обрабатывается для этого ALV-Grid''а'.
    Endcase.
  Endmethod.
  Method handle_user_command.
    "Переключение между гридами
    Case sender.
      When gs_alv-01-r_grid.
        Perform alv_1_handle_user_command using sender e_ucomm.
      When others.
        Message i000(SU) with 'Событие toolbar' 'не обрабатывается для этого ALV-Grid''а'.
    Endcase.
  Endmethod.
  Method handle_hotspot_click.
    "Переключение между гридами
    Case sender.
      When gs_alv-01-r_grid.
        Perform alv_1_handle_hotspot_click
          using e_column_id
                es_row_no
                gt_data.
      When others.
        Message i000(SU) with 'Событие hotspot_click' 'не обрабатывается для этого ALV-Grid''а'.
    Endcase.
  Endmethod.
  Method handle_double_click.
    "Переключение между гридами
    Case sender.
      When gs_alv-01-r_grid.
        Perform alv_1_handle_double_click
          using e_column
                es_row_no
                gt_data.
      When others.
        Message i000(SU) with 'Событие double_click' 'не обрабатывается для этого ALV-Grid''а'.
    Endcase.
  Endmethod.
  Method handle_onf4.
    Case sender.
      When gs_alv-01-r_grid.
        Case e_fieldname.
          When gcs-data_table-stort. "Местоположение
            Data:
              lt_restrictions type ty_t_strings. "Ограничения
          "Заполнить таблицу с ограничениями
            Case sy-dynnr.
              When gcs-screens-data_create-number.
                Move gt_create_stort_restrictions to lt_restrictions.
              When gcs-screens-data_change-number.
                Move gt_change_stort_restrictions to lt_restrictions.
              When others.
              "Оставить стандартную помощь по вводу
                Exit.
            Endcase.
          "Показать свою помощь по вводу (с ограничениями)
            Perform alv_1_show_f4_stort
              using es_row_no
                    er_event_data
                    lt_restrictions
                    .
          When gcs-data_table-equnr. "Единица оборудования
            Data: ls_data_row type ty_s_data.
            Read table gt_data into ls_data_row index es_row_no-row_id.
          "Показать свою помощь по вводу
            Perform alv_1_show_f4_equnr
              using ls_data_row
                    es_row_no
                    er_event_data
                    .
          When others.
            Message i000(SU) with 'Событие onf4' 'не обрабатывается для этого поля'.
        Endcase.
      When others.
        Message i000(SU) with 'Событие onf4' 'не обрабатывается для этого ALV-Grid''а'.
    Endcase.
  Endmethod.
  Method handle_data_changed.
    Case sender.
      When gs_alv-01-r_grid.
        "Использовать экземпляр класса, передаваемый через сообщение
        Perform alv_1_handle_data_changed
          using er_data_changed.
      When others.
        Message i000(SU) with 'Событие data_changed' 'не обрабатывается для этого ALV-Grid''а'.
    Endcase.
  Endmethod.
Endclass.


Tables:
  ZPMP006_1.

"Блок для CREATE (операция "Добавить")
Selection-screen begin of block b01 with frame.
  Selection-screen pushbutton /1(40) text-001 user-command goto_new modif id CRE. "Добавить
  Selection-screen comment 42(40) gv_r_cre modif id CRE.
Selection-screen end of block b01.

"Блок для CHANGE/VIEW (операции "Изменить", "Просмотреть")
Selection-screen begin of block b02 with frame.
  Selection-screen begin of block b10 with frame title text-010.
    Selection-screen comment 1(40) gv_r_cha modif id ID2.
    Select-options:
      so1_strt for ZPMP006_1-STORT modif id ID1,
      so1_eqnr for ZPMP006_1-EQUNR,
      so1_type for ZPMP006_1-TYPE,
      so1_serg for ZPMP006_1-SERGE,
      so1_name for ZPMP006_1-EQUIPMENT_NAME,
      so1_man2 for ZPMP006_1-MANUFACT_NAME,
      so1_man1 for ZPMP006_1-MANUFACT_PLACE,
      so1_proj for ZPMP006_1-PROJECT,
      so1_date for ZPMP006_1-DATE_START.
  Selection-screen end of block b10.
  Selection-screen begin of block b20 with frame title text-020.
    Select-options:
      so2_name for ZPMP006_1-SOFTWARE_NAME,
      so2_vero for ZPMP006_1-VERSION_ORIGINAL,
      so2_verm for ZPMP006_1-VERSION_MOD,
      so2_denv for ZPMP006_1-DEV_ENVIRONMENT,
      so2_mcau for ZPMP006_1-MOD_CAUSE,
      so2_mwor for ZPMP006_1-MOD_WORKER,
      so2_mdat for ZPMP006_1-MOD_DATE,
      so2_numc for ZPMP006_1-NUM_OF_COPIES.
  Selection-screen end of block b20.
  Select-options:
    so3_comm for ZPMP006_1-COMMENTARY,
    so3_chad for ZPMP006_1-CHANGE_DATE,
    so3_chat for ZPMP006_1-CHANGE_TIME,
    so3_chan for ZPMP006_1-CHANGE_NAME.
  Parameters:
  "toggle change = включить/выключить режим изменения
    p_tog_ch as checkbox
      modif id CHA "показывается, если есть полномочия на операцию CHANGE
      user-command selscr_toggle_change "команда, вызываемая по переключению
      default space "изначально режим изменения выключен, чтобы сообщение
        "о наличии ограничений для операции CREATE в статусной строке не
        "перебивалось аналогичным сообщением для операции CHANGE
    .
  Selection-screen pushbutton /1(40) text-004 user-command goto_search. "Искать
Selection-screen end of block b02.

Initialization.
  gs_permissions-view = gc_true. "Нет проверки полномочий на просмотр — смотрят все
  Perform check_permission
    using sy-repid sy-uname gcs-permission_string-change gcs-permission_string-all
    changing gs_permissions-change.
  Perform check_permission
    using sy-repid sy-uname gcs-permission_string-create gcs-permission_string-all
    changing gs_permissions-create.
  Perform check_permission
    using sy-repid sy-uname gcs-permission_string-delete gcs-permission_string-all
    changing gs_permissions-delete.
  Perform check_permission
    using sy-repid sy-uname gcs-permission_string-all gcs-permission_string-all
    changing gs_permissions-all.
  "Не пускать, если нет ни полномочий на VIEW, ни на любое другое действие
  If gs_permissions-view   = gc_false and gs_permissions-change = gc_false and
     gs_permissions-create = gc_false and gs_permissions-delete = gc_false.

    "Сообщение типа E в событии Initialization равнозначно выходу из программы
    Message e000(SU) with 'У пользователя'
                          sy-uname
                          'недостаточно полномочий на работу с программой'
                          sy-repid.
  Endif.

"Показать ограничения или их отсутствие для операции CREATE
  If gs_permissions-create = gc_true.
  "Есть полномочия на операцию CREATE
    If gs_permissions-all <> gc_true.
    "Нет полномочий на всё, выбрать ограничения для операции CREATE
      Perform get_op_restrictions
        using sy-repid sy-uname gcs-permission_string-create 'STORT'
        changing gt_create_stort_restrictions.
    Endif.
    If gt_create_stort_restrictions is initial.
    "Нет ограничений на местоположение для операции CREATE
      Perform show_create_stort_full.
    Else.
    "Показать один раз сообщение об ограничениях в статусной строке
      Message s000(su) with 'Действуют ограничения на местоположение'
                            'для операции "Добавить"'.
    "Задать один раз (не меняется далее) поясняющий текст (блок для CREATE)
      Perform show_create_stort_restricted
        using gt_create_stort_restrictions.
    Endif.
  Endif.
"Показать ограничения или их отсутствие для операции CHANGE
  If gs_permissions-change = gc_true and gs_permissions-all <> gc_true.
  "Есть полномочия на операцию CHANGE и нет полномочий на всё
  "Выбрать ограничения для операции CHANGE
    Perform get_op_restrictions
      using sy-repid sy-uname gcs-permission_string-change 'STORT'
      changing gt_change_stort_restrictions.
  Endif.

*--- Перед отображением экрана выбора
At selection-screen output.
  If gs_permissions-create <> gc_true.
    Perform hide_screen_element_group using gcs-screens-sel_screen-group_create.
  Endif.
  If gs_permissions-change <> gc_true.
    Perform hide_screen_element_group using gcs-screens-sel_screen-group_change.
  Endif.

"Определить, как показывать параметр "Местоположение" (блок для CHANGE/VIEW)
  If gs_permissions-all = gc_true or
     p_tog_ch <> gc_true or
    ( p_tog_ch = gc_true and gt_change_stort_restrictions is initial ).
  "Ограничения на местоположение не действуют, так как
  " либо 1) есть полномочия на всё (ALL)
  " либо 2) режим изменения выключен,
  " либо 3) включён режим изменения и ограничений на местоположение нет
    Perform show_change_stort_full.
  Else.
  "Действуют ограничения на местоположение
    Message s000(su) with 'Действуют ограничения на местоположение'
                          'для операции "Изменить"'.
    Perform show_change_stort_restricted using gt_change_stort_restrictions.
  Endif.

*--- Реакция на нажатие кнопок на экране выбора ------------------------------*
At selection-screen.
  Perform dispatch_user_command using sy-dynnr changing sy-ucomm.

*--- Нажатие "Выполнить" (F8) на экране выбора (sy-ucomm = 'ONLI') -----------*
Start-of-selection.
  Perform get_data changing gt_data gv_row_count.
  If gv_row_count = 0. "Обработать результат выборки из БД, вхождение 1 из 3
    Message i000(SU) with 'Не найдено ни одной записи'.
    Exit.
  Else.
    Message s000(SU) with 'Записей найдено:' gv_row_count 'шт.'.
  Endif.


*--- Выборка из базы данных завершена ----------------------------------------*
End-of-selection.
  Call screen gcs-screens-data_view-number.


*--- Экранные модули, начало -------------------------------------------------*
Module init_screen output. "Общий для всех экранов — установить GUI-статус
  Set pf-status gcs-screens-status-min. "Установить минимальный набор функций
  "Инициировать экземпляр ALV-Grid'а и заголовок, соответствующие текущему экрану
  Case sy-dynnr.
    When gcs-screens-data_create-number.
      Set pf-status gcs-screens-status-save. "Минимум + сохранение
      Set titlebar gcs-screens-data_create-title.
      Perform alv_1_display using gs_permissions-all changing gt_data gs_alv-01.
      Call method gs_alv-01-r_grid->set_ready_for_input
        exporting
          i_ready_for_input = 1
          .
      "Считать, что в таблице пусто, т.е. можно только добавлять новые записи
      Refresh gt_data_before. "Запомнить содержимое до изменений, 1 из 3

    When gcs-screens-data_change-number.
      Set pf-status gcs-screens-status-save. "Минимум + сохранение
      Set titlebar gcs-screens-data_change-title.
      Perform alv_1_display using gs_permissions-all changing gt_data gs_alv-01.
      Call method gs_alv-01-r_grid->set_ready_for_input
        exporting
          i_ready_for_input = 1
          .
      Move gt_data to gt_data_before. "Запомнить содержимое до изменений, 2 из 3

    When gcs-screens-data_view-number.
      Set titlebar gcs-screens-data_view-title.
      Perform alv_1_display using gs_permissions-all changing gt_data gs_alv-01.
      Call method gs_alv-01-r_grid->set_ready_for_input
        exporting
          i_ready_for_input = 0
          .

    When others.
      Message i000(SU) with 'Отображение ALV-Grid''а на экране' sy-dynnr 'не сделано'.
  Endcase.
Endmodule. "init_screen

Module dispatch_user_command input.
  Perform dispatch_user_command using sy-dynnr changing sy-ucomm.
Endmodule. "dispatch_user_command

Module exit_screen input. "Общий для всех экранов — обработать команду выхода
  Perform exit_screen using sy-dynnr.
Endmodule. "exit_screen
*--- Экранные модули, конец --------------------------------------------------*

*&-------------------------------------------------------------------*
*&   Общая обработка команд от пользователя на всех экранах
*&-------------------------------------------------------------------*
Form dispatch_user_command
  using
    iv_dynnr type sy-dynnr
  changing
    ov_ucomm type sy-ucomm.

  Data: lv_ucomm type sy-ucomm.

  lv_ucomm = ov_ucomm. "ov_ucomm очищается при успешном завершении подпрограммы

  If lv_ucomm is initial.
    Exit.
  Endif.

  "Искать команду в списке команд, общих для всех экранов.
  "Если найдена — обработать и выйти из этой подпрограммы.
  Case lv_ucomm.
    When gcs-commands-help.
      Perform show_help.
      Exit.
    When gcs-commands-version.
      Perform show_version using gc_version.
      Exit.
    When others.
      "Команда не найдена в списке команд, общих для всех экранов.
      "Продолжить поиск.
  Endcase.

  "Искать команду в списке команд, специфичных для указанного экрана
  Case iv_dynnr.
    "Команды на экране выбора
    When gcs-screens-sel_screen-number.

      Case lv_ucomm.

        When gcs-commands-sel_screen-goto_new.
          Call screen gcs-screens-data_create-number.

        When gcs-commands-sel_screen-goto_search.
          Perform get_data changing gt_data gv_row_count.
          If gv_row_count = 0. "Обработать результат выборки из БД, вхождение 2 из 3
            Message i000(SU) with 'Не найдено ни одной записи'.
            Exit.
          Else.
            Message s000(SU) with 'Записей найдено:' gv_row_count 'шт.'.
          Endif.

          If gc_true = p_tog_ch.
            Call screen gcs-screens-data_change-number.
          Else.
            Call screen gcs-screens-data_view-number.
          Endif.

        When gcs-commands-sel_screen-online. "Нажатие "Выполнить" (F8) на экране выбора
          "ничего не делать, обработка находится в событии Start-of-selection

        When 'SELSCR_TOGGLE_CHANGE'.
          "обработка находится в событии At selection-screen output

        When others. "Команда не найдена в списке обрабатываемых
          "Ничего не делать = стандартные команды на экране выбора и так обрабатываются
          Exit.

      Endcase.

    When gcs-screens-data_create-number.
      Case lv_ucomm.
        When gcs-commands-new_screen-save.
          Perform save_data
            using gs_alv-01
            changing gt_data_before
                     gt_data.
        "Вернуться на экран выбора после успешного сохранения
          Perform exit_screen using sy-dynnr.
        When others. "Команда не найдена в списке обрабатываемых
          Message i000(SU) with 'На экране' iv_dynnr 'не обрабатывается команда' lv_ucomm.
      Endcase.

    When gcs-screens-data_change-number.
      Case lv_ucomm.
        When gcs-commands-change_screen-save.
          Perform save_data
            using gs_alv-01
            changing gt_data_before
                     gt_data.
        "Обновить ALV-грид
          Call method gs_alv-01-r_grid->refresh_table_display
            exporting
              is_stable = gcs-alv-stable_refresh.
        When others. "Команда не найдена в списке обрабатываемых
          Message i000(SU) with 'На экране' iv_dynnr 'не обрабатывается команда' lv_ucomm.
      Endcase.

    "Команды на остальных экранах = на экране со списком ЕО
    When others.
      Message i000(SU) with 'На экране' iv_dynnr 'не обрабатывается команда' lv_ucomm.
  Endcase.

  Clear ov_ucomm. "ov_ucomm очищается при успешном завершении подпрограммы
Endform. "dispatch_user_command

*&-------------------------------------------------------------------*
*&   Показать справку по программе (сейчас это список скрытых команд)
*&-------------------------------------------------------------------*
Form show_help.
  Message i000(SU) with 'Скрытые команды: HELP, VERSION'.
Endform. "show_help

*&-------------------------------------------------------------------*
*&   Показать информацию о версии программы (инф. берётся из констант)
*&-------------------------------------------------------------------*
Form show_version using ic_version like gc_version.
  Data:
    lv_message type string,
    lv_changed_date type TRDIR-UDAT,
    lv_date_string type c length 10,
    lv_changed_by type TRDIR-UNAM,
    lv_substring type string.

  Move sy-title to lv_message.
  Concatenate lv_message ', версия '
              ic_version-major '.' ic_version-minor
    into lv_message respecting blanks.

  Select single UDAT UNAM
    from TRDIR
    into (lv_changed_date, lv_changed_by)
    where NAME = sy-repid.
  If sy-subrc <> 0.
    lv_substring = 'Последнее изменение неизвестно (таблица TRDIR).'.
  Else.
    Write lv_changed_date to lv_date_string.
    Concatenate 'Последнее изменение сделано' lv_date_string
                'пользователем' lv_changed_by
      into lv_substring separated by space.
  Endif.

  Concatenate lv_message lv_substring
    into lv_message separated by '. '.
  Message lv_message type 'I'.
Endform. "show_version

*&-------------------------------------------------------------------*
*&   Уничтожить объекты на указанном экране, перейти на предыдущий
*&-------------------------------------------------------------------*
Form exit_screen
  using i_dynnr like sy-dynnr.

  Data: "Чтобы ловить исключительные ситуации
    lv_exc_text type string,
    lr_exception type ref to cx_root.

  Case i_dynnr.

    When gcs-screens-data_create-number
      or gcs-screens-data_change-number
      or gcs-screens-data_view-number.
      Try.
        Call method gs_alv-01-r_grid->free.
        Call method gs_alv-01-r_cont->free.
      Catch cx_root into lr_exception. "#EC CATCH_ALL
        Call method lr_exception->if_message~get_text
          receiving
            result = lv_exc_text.
        Message i000(SU) with 'Исключительная ситуация при вызове методов Free:' lv_exc_text.
      Endtry.
      Free: gs_alv-01-r_grid, gs_alv-01-r_cont, gs_alv-01-r_handler,
            gt_data, gt_data_before,
            gs_alv-01-t_fcat, gs_alv-01-t_sort, gs_alv-01-t_excl,
            gs_alv-01-t_f4,
            gs_alv-01-s_layo, gs_alv-01-s_vari,
            gs_alv-01-v_save.

    When others.
      Message i000(SU) with 'Модуль exit_screen не обрабатывает экран' i_dynnr.
      Exit.

  Endcase.

  "Вернуться на предыдущий экран, с которого был вызван текущий
  Leave to screen 0.
Endform. "exit_screen

*&-------------------------------------------------------------------*
*&   Есть ли в таблице ZPM_USR полномочия на указанную операцию? Поиск идёт по
*& первичному ключу (поля PROGNAME, UNAME, OPERATION). Ищутся полномочия на
*& указанную операцию i_operation или на всё (i_all).
*&
*&  -> i_program_name = соответствует ключевому полю PROGNAME в таблице ZPM_USR
*&  -> i_usr_name = -//- полю UNAME -//-
*&  -> i_operation = -//- полю OPERATION -//-
*&  -> i_all = значение, соответствующее полномочиям на всё
*&-------------------------------------------------------------------*
Form check_permission
  using
    i_program_name type progname
    i_user_name  type xubname
    i_operation type zpm_auth_operation
    i_all type zpm_auth_operation
  changing
    o_allowed type boolean.

  Data: ls_zpm_usr type ZPM_USR.

  Select single *
    from ZPM_USR
    into ls_zpm_usr
    where PROGNAME = i_program_name
      and UNAME = i_user_name
      and ( OPERATION = i_operation or OPERATION = i_all )
    .
  If sy-subrc <> 0.
    o_allowed = gc_false.
  Else.
    o_allowed = gc_true.
  Endif.
Endform. "check_permission

*&-------------------------------------------------------------------*
*&   Скрыть на текущем экране элементы управления, принадлежащие
*& указанной группе.
*&
*&  -> iv_group_name = название группы, элементы которой будут скрыты
*&-------------------------------------------------------------------*
Form hide_screen_element_group
  using iv_group_name type screen-group1.

  Loop at screen.
    If screen-group1 = iv_group_name.
      screen-active = 0.
    Endif.
    Modify screen.
  Endloop.
Endform. "hide_screen_element_group

*&-------------------------------------------------------------------*
*&   Показать на текущем экране элементы управления, принадлежащие
*& указанной группе.
*&
*&  -> iv_group_name = название группы, элементы которой будут показаны
*&-------------------------------------------------------------------*
Form show_screen_element_group
  using iv_group_name type screen-group1.

  Loop at screen.
    If screen-group1 = iv_group_name.
      screen-active = 1.
    Endif.
    Modify screen.
  Endloop.
Endform. "show_screen_element_group

*&-------------------------------------------------------------------*
*&   Показать (блок для CHANGE/VIEW) поле "Местоположение" с ограничениями:
*& 1) скрыть поле множественного выбора SO1_STRT "Местоположение",
*& 2) задать его значения из ограничений,
*& 3) показать ограничения через Selection-screen comment gv_r_cha.
*&   Глобальные объекты: so1_strt, gv_r_cha
*&
*&  -> it_restrictions = таблица со значениями, которые нужно задать
*&-------------------------------------------------------------------*
Form show_change_stort_restricted
  using it_restrictions type ty_t_strings.

  Data:
    ls_so1_strt like line of so1_strt,
    ls_restriction type ty_s_string.

"Скрыть поле множественного выбора SO1_STRT "Местоположение"
  Perform hide_screen_element_group
    using gcs-screens-sel_screen-group_stort_restriction_1.

"Задать значения поля из ограничений
  Refresh so1_strt[].
  Clear so1_strt.
  Clear gv_r_cha.

  ls_so1_strt-sign = 'I'.
  ls_so1_strt-option = gcs-so-option-equals.

  Loop at it_restrictions into ls_restriction.
    ls_so1_strt-low = ls_restriction-string.
    Append ls_so1_strt to so1_strt[].
    Concatenate gv_r_cha ls_restriction-string
      into gv_r_cha
      separated by space.
  Endloop.

"Показать ограничения через Selection-screen comment gv_r_cha
  Concatenate text-005 gv_r_cha into gv_r_cha.
  Perform show_screen_element_group
    using gcs-screens-sel_screen-group_stort_restriction_2.

Endform. "show_change_stort_restricted

*&-------------------------------------------------------------------*
*&   Показать (блок для CHANGE/VIEW) поле "Местоположение" без ограничений:
*& 1) показать поле множественного выбора SO1_STRT "Местоположение",
*& 2) очистить поле SO1_STRT,
*& 3) скрыть Selection-screen comment gv_r_cha.
*&   Глобальные объекты: so1_strt, gv_r_cha
*&
*&  -> it_restrictions = таблица со значениями, которые нужно задать
*&-------------------------------------------------------------------*
Form show_change_stort_full.

"Показать поле множественного выбора SO1_STRT "Местоположение"
  Perform show_screen_element_group
    using gcs-screens-sel_screen-group_stort_restriction_1.

"Очистить поле SO1_STRT
  Refresh so1_strt[].
  Clear so1_strt.

"Скрыть Selection-screen comment gv_r_cha
  Clear gv_r_cha.
  Perform hide_screen_element_group
    using gcs-screens-sel_screen-group_stort_restriction_2.

Endform. "show_change_stort_full

*&-------------------------------------------------------------------*
*&   Показать (блок для CREATE) наличие ограничений на "Местоположение":
*& 1) задать текст для Selection-screen comment gv_r_cre.
*&   Глобальные объекты: gv_r_cre
*&-------------------------------------------------------------------*
Form show_create_stort_restricted
  using it_restrictions type ty_t_strings.

  Data: ls_restriction type ty_s_string.
"Задать текст для Selection-screen comment gv_r_cre
  gv_r_cre = text-005.
  Loop at it_restrictions into ls_restriction.
    Concatenate gv_r_cre ls_restriction-string
      into gv_r_cre
      separated by space.
  Endloop.

Endform. "show_create_stort_restricted

*&-------------------------------------------------------------------*
*&   Показать (блок для CREATE) отсутствие ограничений на "Местоположение":
*& 1) задать текст для Selection-screen comment gv_r_cre.
*&   Глобальные объекты: gv_r_cre
*&-------------------------------------------------------------------*
Form show_create_stort_full.
"Задать текст для Selection-screen comment gv_r_cre
  Concatenate text-005 'нет' into gv_r_cre separated by space.

Endform. "show_create_stort_full

*&-------------------------------------------------------------------*
*&   Выбрать из таблицы ZPM_USR ограничения на операцию i_operation, которую
*& пользователь i_user_name может производить в программе i_program_name над
*& объектами типа i_restriction_type. Добавить выбранные значения в выходную
*& таблицу ot_values.
*&
*&  -> i_program_name = соответствует ключевому полю PROGNAME в таблице ZPM_USR
*&  -> i_usr_name = -//- полю UNAME -//-
*&  -> i_operation = -//- полю OPERATION -//-
*&  -> i_restriction_type = тип объектов, например 'STORT', смотри документацию
*&     к элементу данных ZPM_AUTH_OP_RESTRICTIONS
*& <-> ot_restrictions = таблица с выбранными ограничениями
*&-------------------------------------------------------------------*
Form get_op_restrictions
  using
    i_program_name type progname
    i_user_name  type xubname
    i_operation type zpm_auth_operation
    i_restriction_type type zpm_auth_op_restrictions
  changing ot_restrictions type ty_t_strings.

  Data:
    lv_SQL_string type string,
    lv_restrictions type string,
    lt_split_values type standard table of string,
    lv_split_value type string,
    ls_restriction type ty_s_string.

  Refresh ot_restrictions.

  Concatenate i_restriction_type '%' into lv_SQL_string.

  Select single restrictions
    from ZPM_USR
    into lv_restrictions
    where PROGNAME = i_program_name
      and UNAME = i_user_name
      and OPERATION = i_operation
      and RESTRICTIONS like lv_SQL_string.
  If sy-subrc <> 0.
    Exit.
  Endif.

"В переменную lv_restrictions выбраны ограничения, формат = 'STORT;13;38;85'
  Split lv_restrictions at ';' into table lt_split_values.
  Loop at lt_split_values from 2 into lv_split_value.
    ls_restriction-string = lv_split_value.
    Append ls_restriction to ot_restrictions.
  Endloop.
Endform. "get_op_restrictions

*&-------------------------------------------------------------------*
*&   Заполнить внутреннюю таблицу данными из базы данных
*&
*& <-> ot_data = вн. таблица (источник задан константой — ZPMP006_1)
*& <-> ov_count = количество строк, выбранных из БД во вн. таблицу
*&-------------------------------------------------------------------*
Form get_data
  changing
    ot_data type ty_t_data
    ov_count type i.
  "Выбрать записи, перезаписав таблицу ot_data
  Select *
    from ZPMP006_1
    into corresponding fields of table ot_data
    where STORT in so1_strt
      and EQUNR in so1_eqnr
      and TYPE in so1_type
      and SERGE in so1_serg
      and EQUIPMENT_NAME in so1_name
      and MANUFACT_NAME in so1_man2
      and MANUFACT_PLACE in so1_man1
      and DATE_START in so1_date
      and PROJECT in so1_proj
      and SOFTWARE_NAME in so2_name
      and VERSION_ORIGINAL in so2_vero
      and VERSION_MOD in so2_verm
      and DEV_ENVIRONMENT in so2_denv
      and MOD_CAUSE in so2_mcau
      and MOD_WORKER in so2_mwor
      and MOD_DATE in so2_mdat
      and NUM_OF_COPIES in so2_numc
      and COMMENTARY in so3_comm
      and CHANGE_DATE IN so3_chad
      and CHANGE_TIME IN so3_chat
      and CHANGE_NAME IN so3_chan
      and DELETED EQ gc_false.
  ov_count = sy-dbcnt.
Endform. "get_data

*&-------------------------------------------------------------------*
*&   Подготовить набор объектов, необходимый для отображения ALV-грида
*& Структура грида заполняется из таблицы ZPMP006_1, которая задана
*& через глобальную константу gcs-data_table-table_name.
*&
*&  -> iv_dynnr = номер экрана, для которого подготавливается ALV-грид
*&  -> iv_can_change_variant = разрешение изменять внешний вид грида
*& <-> ot_fieldcat = структура грида (набор столбцов)
*& <-> ot_sort = правила сортировки
*& <-> os_layout = общие настройки внешнего вида
*& <-> os_variant = вариант внешнего вида, заданный по умолчанию
*&-------------------------------------------------------------------*
Form alv_1_prepare
  using
    iv_dynnr type sy-dynnr
    iv_can_change_variant type boolean
  changing:
    ot_fieldcat type lvc_t_fcat
    ot_sort type lvc_t_sort
    ot_excl type ui_functions
    ot_f4 type lvc_t_f4
    os_layout type lvc_s_layo
    os_variant type disvariant
    ov_save_mode type c.

  Data:
    ls_fcat type lvc_s_fcat,
    ls_sort type lvc_s_sort,
    ls_excl type ui_func,
    ls_f4 type lvc_s_f4.

"Field catalog
  Call function 'LVC_FIELDCATALOG_MERGE'
    exporting
      i_structure_name             = gcs-data_table-table_name
    changing
      ct_fieldcat                  = ot_fieldcat
    exceptions
      others                       = 1
            .
  If sy-subrc <> 0.
    Message e000(SU) with 'Ошибка при заполнении fieldcat для ALV на экране' sy-dynnr 'из таблицы' gcs-data_table-table_name.
    Exit.
  Endif.

  Loop at ot_fieldcat into ls_fcat.
  "Обработать все столбцы
    If ls_fcat-fieldname = gcs-data_table-key_mandt
    or ls_fcat-fieldname = gcs-data_table-key_unique_index
    or ls_fcat-fieldname = gcs-data_table-deleted.
    "Скрыть столбцы, чьи поля относятся к первичному ключу или к служебным
      ls_fcat-no_out = gc_true.
    Else.
    "Показываемые столбцы сделать доступными для изменения содержимого
      ls_fcat-edit = gc_true.
    "Ещё нужно вызвать метод set_ready_for_input, что сделано в другом месте
    Endif.

  "Сделать "горячими" поля столбца "Единица оборудования" для режима VIEW
    If ls_fcat-fieldname = gcs-data_table-equnr and
       iv_dynnr = gcs-screens-data_view-number.
      ls_fcat-hotspot = gc_true.
    Endif.

  "Сделать некоторые столбцы недоступными для изменения содержимого
    If ls_fcat-fieldname = gcs-data_table-stort or "Ввод через помощь по вводу
       ls_fcat-fieldname = gcs-data_table-change_date or
       ls_fcat-fieldname = gcs-data_table-change_time or
       ls_fcat-fieldname = gcs-data_table-change_name.
      ls_fcat-edit = gc_false.
    Endif.

    Modify ot_fieldcat from ls_fcat.
  Endloop.

"Sort
  ls_sort-spos = 1.
  ls_sort-fieldname = gcs-data_table-stort.
  ls_sort-down = gc_false.
  ls_sort-up = gc_true.
  Append ls_sort to ot_sort.

  ls_sort-spos = 2.
  ls_sort-fieldname = gcs-data_table-equipment_name.
  ls_sort-down = gc_false.
  ls_sort-up = gc_true.
  Append ls_sort to ot_sort.

"Убрать кнопки
  ls_excl = cl_gui_alv_grid=>mc_mb_sum. "Кнопки "Суммы", "Подсуммы"
  Append ls_excl to ot_excl.

  ls_excl = cl_gui_alv_grid=>mc_fc_graph. "Кнопка "Графика"
  Append ls_excl to ot_excl.

"Обработать полномочия на работу с внешним видом грида
  If iv_can_change_variant <> gc_true.
  "Убрать все кнопки для пользователей без полномочий
    ls_excl = cl_gui_alv_grid=>mc_mb_variant. "Кнопки "Формат" — внешний вид
    Append ls_excl to ot_excl.
  Else.
  "Оставить кнопки, задать что можно сохранять внешний вид любыми способами
    ov_save_mode = gcs-alv-variant_save_modes-all.
  Endif.

"Помощь по вводу (клавиша F4)
  ls_f4-register = gc_true.
  ls_f4-getbefore = gc_false.
  ls_f4-chngeafter = gc_false.
  ls_f4-fieldname = gcs-data_table-stort. "Местоположение
  Insert ls_f4 into table ot_f4. "Insert вместо Append т.к. таблица — sorted
  ls_f4-fieldname = gcs-data_table-equnr. "Единица оборудования
  Insert ls_f4 into table ot_f4. "Insert вместо Append т.к. таблица — sorted

"Layout
  os_layout-cwidth_opt = gc_true.
  os_layout-sel_mode = gcs-alv-sel_mode-d.
  os_layout-info_fname = gcs-data_table-alv_row_color.

"Variant = вариант внешнего вида
  os_variant-report = sy-repid. "использовать вариант по умолчанию, если есть

"Обработка экранов
  Case iv_dynnr.
    When gcs-screens-data_create-number. "Для экрана CREATE

    When gcs-screens-data_change-number. "Для экрана CHANGE
    "Убрать возможность добавления/удаления строк стандартными средствами ALV
      os_layout-no_rowins = gc_true.
  Endcase.
Endform. "alv_1_prepare

*&-------------------------------------------------------------------*
*&   Показать/обновить грид типа 1 на текущем экране в контейнере
*& класса cl_gui_docking_container. Данные для грида — в ot_data.
*& Структура и внешний вид грида задаются подпрограммой alv_1_prepare
*& из таблицы ZPMP006_1, которая задана через глобальную константу
*& gcs-data_table-table_name.
*&
*&  -> iv_can_change_variant = разрешение изменять внешний вид грида
*& <-> ot_data = внутренняя таблица с данными из таблицы БД
*& <-> os_alv = набор объектов, необходимый для отображения ALV-грида
*&
*&-------------------------------------------------------------------*
Form alv_1_display
  using
    iv_can_change_variant type boolean
  changing
    ot_data type ty_t_data
    os_alv type ty_s_alv-01.

  If os_alv-r_grid is initial.
    Create object os_alv-r_cont
      exporting
        repid         = sy-repid
        dynnr         = sy-dynnr
        side          = cl_gui_docking_container=>dock_at_top
        extension     = cl_gui_docking_container=>ws_maximizebox
      exceptions
        others        = 1
        .
    If sy-subrc <> 0.
      Message e000(SU) with 'Не удалось создать экземпляр' 'docking-контейнера на экране' sy-dynnr.
      Exit.
    Endif.
    Create object os_alv-r_grid
      exporting
        i_parent          = os_alv-r_cont
      exceptions
        others            = 1
        .
    If sy-subrc <> 0.
      Message e000(SU) with 'Не удалось создать экземпляр ALV-Grid''а на экране' sy-dynnr.
      Exit.
    Endif.

    "Задать способ подтягивания изменений в таблице ALV-Grid'а
    Call method os_alv-r_grid->register_edit_event
      exporting
        i_event_id = cl_gui_alv_grid=>mc_evt_enter "Enter либо двойной щелчок
*        i_event_id = cl_gui_alv_grid=>mc_evt_modified "когда курсор покидает ячейку
      exceptions
        others     = 1
            .
    If sy-subrc <> 0.
      Message e000(SU) with 'Исключ. ситуация при вызове' 'os_alv-r_grid->register_edit_event'.
      Exit.
    Endif.

    Perform alv_1_prepare
      using
        sy-dynnr
        iv_can_change_variant
      changing
        os_alv-t_fcat
        os_alv-t_sort
        os_alv-t_excl
        os_alv-t_f4
        os_alv-s_layo
        os_alv-s_vari
        os_alv-v_save.

    Create object os_alv-r_handler.
    Set handler os_alv-r_handler->handle_toolbar for os_alv-r_grid.
    Set handler os_alv-r_handler->handle_user_command for os_alv-r_grid.
    Set handler os_alv-r_handler->handle_hotspot_click for os_alv-r_grid.
    Set handler os_alv-r_handler->handle_double_click for os_alv-r_grid.
    Set handler os_alv-r_handler->handle_onf4 for os_alv-r_grid.
    Set handler os_alv-r_handler->handle_data_changed for os_alv-r_grid.

    Call method os_alv-r_grid->register_f4_for_fields
      exporting
        it_f4                         = os_alv-t_f4.

    Call method os_alv-r_grid->set_table_for_first_display
      exporting
        is_layout                     = os_alv-s_layo
        is_variant                    = os_alv-s_vari
        i_save                        = os_alv-v_save
        it_toolbar_excluding          = os_alv-t_excl
      changing
        it_outtab                     = ot_data
        it_fieldcatalog               = os_alv-t_fcat
        it_sort                       = os_alv-t_sort
      exceptions
        others                        = 1
            .
    If sy-subrc <> 0.
      Message e000(SU) with 'Исключ. ситуация при вызове метода'
                            'os_alv-r_grid->set_table_for_first_display'
                            'на экране'
                            sy-dynnr.
      Exit.
    Endif.

  Else.
    Call method os_alv-r_grid->refresh_table_display
      exporting
        is_stable = gcs-alv-stable_refresh.
  Endif.
Endform. "alv_1_display

*&-------------------------------------------------------------------*
*&   Сохранить данные, введённые в ALV-грид. Сохраняемые строки находятся
*& через сравнение содержимого привязанной к ALV-гриду внутренней таблицы в
*& два момента: до и после вызова метода check_changed_data. Особый случай —
*& строки, помеченные на удаление через нестандартную (свою) кнопку DELETE. Они
*& определяются, как изменённые стандартными средствами ALV-грида, переносятся
*& из таблицы изменённых lt_mod_rows к таблице удалённых lt_del_rows.
*&
*&   Если при сохранении происходит ошибка, то выдаётся сообщение типа E. Если
*& save_data была вызвана из модуля PAI, то после сообщения типа E обработка
*& модуля прекращается, экран остаётся прежним, объекты не сбрасываются — можно
*& исправить ошибку и попробовать сохранить ещё раз.
*&
*&   -> is_alv = структура объектов, относящихся к ALV-гриду
*&  <-> ot_data =  таблица, привязанная к ALV-гриду в методе
*&      set_table_for_first_display класса cl_gui_alv_grid
*&-------------------------------------------------------------------*
Form save_data
  using
    is_alv type ty_s_alv-01
  changing
    ot_data_before type ty_t_data
    ot_data type ty_t_data.

  Data:
    lv_data_is_valid type c length 1,
    lt_del_rows type ZPMP006_1_TABLE_TYPE, "строки, которые были удалены после вызова
    lt_ins_rows type ty_t_data, "-//- вставлены
    lt_mod_rows type ty_t_data, "-//- изменены
    begin of ls_num_of,
      deleted type i,
      inserted type i,
      modified type i,
    end of ls_num_of,
  "Для подтягивания изменений, которые делаются функ. модулями ZPMP006_1_*.
    lt_data_source type ty_t_data, "Содержимое таблиц del, ins, mod
    ls_data_source type ty_s_data, "Строка с данными из таблиц del, ins, mod
    ls_data_destination type ty_s_data. "Строка для записи в ot_data


"Подтянуть текущее состояние ячеек ALV-грида в связанную с ним таблицу ot_data
  Call method is_alv-r_grid->check_changed_data
    importing
      e_valid   = lv_data_is_valid
      .
  If lv_data_is_valid is initial.
    Message e000(su) with 'Ошибка в данных, сохранение не выполнено'.
    Exit.
  Endif.

"Найти отличия между тем, что было в гриде до и после вызова check_changed_data
  "Обработать удалённые строки
    Perform subtract_set  "Из "До" вычесть "После"
      using ot_data_before
            ot_data
      changing lt_del_rows.
  "Обработать добавленные строки
    Perform subtract_set  "Из "После" вычесть "До"
      using ot_data
            ot_data_before
      changing lt_ins_rows.
  "Обработать изменённые строки
    Perform get_rows_with_mod_content
      using ot_data
            ot_data_before
      changing lt_mod_rows.
"Определены все удалённые/добавленные/изменённые стандартными средствами строки
"Перенести к удалённым строкам те из изменённых, что были удалены нестандартно,
"то есть те, что посчитаны как изменённые стандартно.
  Loop at lt_mod_rows into ls_data_source where alv_deleted = gc_true.
    Delete lt_mod_rows index sy-tabix. "Удалить из одной таблицы
    Append ls_data_source to lt_del_rows. "Вставить в другую таблицу
  Endloop.

"Применить изменения к таблице ZPMP006_1
  Call function 'ZPMP006_1_DELETE'
    exporting
      iv_do_commit = gc_false
    importing
      o_num_of_processed = ls_num_of-deleted
    changing
      ct_records = lt_del_rows
    exceptions
      db_error = 1.
  If sy-subrc <> 0.
    Message e000(su) with 'Ошибка при вызове ZPMP006_1_DELETE.'
                          'Содержимое таблицы ZPMP006_1 не изменено.'.
    Exit.
  Endif.
  Call function 'ZPMP006_1_INSERT'
    exporting
      iv_do_commit = gc_false
    importing
      o_num_of_processed = ls_num_of-inserted
    changing
      ct_records = lt_ins_rows
    exceptions
      db_error = 1
      nums_not_equal = 2.
  If sy-subrc <> 0.
    Message e000(su) with 'Ошибка при вызове ZPMP006_1_INSERT.'
                          'Содержимое таблицы ZPMP006_1 не изменено.'.
    Exit.
  Endif.
  Call function 'ZPMP006_1_MODIFY'
    exporting
      iv_do_commit = gc_false
    importing
      o_num_of_processed = ls_num_of-modified
    changing
      ct_records = lt_mod_rows
    exceptions
      db_error = 1.
  If sy-subrc <> 0.
    Message e000(su) with 'Ошибка при вызове ZPMP006_1_MODIFY.'
                          'Содержимое таблицы ZPMP006_1 не изменено.'.
    Exit.
  Endif.

"Подтвердить сделанные в таблице ZPMP006_1 изменения
  Commit work and wait.

"Отчитаться
  Message i000(su) with 'Удалено/добавлено/изменено строк:'
                        ls_num_of-deleted
                        ls_num_of-inserted
                        ls_num_of-modified.

"Собрать таблицы ins, mod в ot_data — подтянуть содержимое полей дата,
"время и автор изменения, которое было заполнено функ. модулями ZPMP006_1_*.
  Do 2 times.
  "Обработать 2 таблицы (mod, ins)
    Refresh lt_data_source.
    Case sy-index.
      When 1.
        Move lt_mod_rows to lt_data_source.
      When others.
        Move lt_ins_rows to lt_data_source.
    Endcase.
  "Таблица lt_data_source содержит очередную таблицу — mod или ins
    Loop at lt_data_source into ls_data_source.
      Read table ot_data into ls_data_destination
        with key unique_index = ls_data_source-unique_index.
      If sy-subrc <> 0.
        Message w000(su)
          with 'Не удалось обработать запись с индексом'
               ls_data_source-unique_index
               ', чтобы отобразить данные о последнем изменении'
               'на экране. Сообщите разработчикам по т. 6-04-42'.
        Continue. "Перейти к следующей записи в lt_data_source
      Endif.
    "Найдена запись, в которую нужно подтянуть данные о последнем изменении
      ls_data_destination-change_date = ls_data_source-change_date.
      ls_data_destination-change_time = ls_data_source-change_time.
      ls_data_destination-change_name = ls_data_source-change_name.
      Modify ot_data from ls_data_destination index sy-tabix.
    Endloop.
  Enddo.

"Удалить записи, которые были помечены, как удалённые
  Delete ot_data where alv_deleted = gc_true.

"Запомнить содержимое до изменений, 3 из 3
  Move ot_data to ot_data_before.
Endform. "save_data

*&-------------------------------------------------------------------*
*&   Вычесть из множества записей в первой таблице множество записей из
*& второй таблицы и выдать множество-разность. Записи сравнивать по ключевым
*& полям (MANDT, UNIQUE_INDEX), не сравнивать содержимое остальных полей.
*&
*&  -> it_minuend = уменьшаемое множество
*&  -> it_subtrahend = вычитаемое множество
*& <-> ot_difference = множество-разность
*&-------------------------------------------------------------------*
Form subtract_set
  using
    it_minuend type ty_t_data "уменьшаемое множество
    it_subtrahend type ty_t_data "вычитаемое множество
  changing
    ot_difference type ty_t_data. "множество-разность

  Data:
    ls_subtrahend type ty_s_data.

  Move it_minuend to ot_difference.
  Loop at it_subtrahend into ls_subtrahend.
    Delete ot_difference
      where mandt = ls_subtrahend-mandt
        and unique_index = ls_subtrahend-unique_index.
  Endloop.
Endform. "subtract_set

*&-------------------------------------------------------------------*
*&   Выдать те строки из первой входной таблицы, у которых ключевые поля
*& совпадают со строками из второй входной таблицы, а содержимое - не
*& совпадает.
*&
*&  -> it_set_1 = первая входная таблица
*&  -> it_set_2 = вторая входная таблица
*& <-> ot_rows_with_mod_content = искомые строки из первой входной таблицы
*&-------------------------------------------------------------------*
Form get_rows_with_mod_content
  using
    it_set_1 type ty_t_data
    it_set_2 type ty_t_data
  changing
    ot_rows_with_mod_content type ty_t_data.

  Data:
    ls_1 type ty_s_data,
    ls_2 type ty_s_data, "#EC NEEDED смотри Read table it_set_2 ниже
    lt_intersection type ty_t_data, "Пересечение по ключу
    ls_intersection type ty_s_data.

  Refresh ot_rows_with_mod_content.

  Loop at it_set_1 into ls_1.
    Read table it_set_2
      with key
        mandt = ls_1-mandt
        unique_index = ls_1-unique_index
      into ls_2.
    If sy-subrc = 0. "Пересечение
      Append ls_1 to lt_intersection. "содержимое из первой таблицы
    Endif.
  Endloop.

"Определены строки с совпадающими ключами из первой и второй входной таблицы

  Loop at lt_intersection into ls_intersection.
    Read table it_set_2
      with key table_line = ls_intersection
      into ls_2.
    If sy-subrc <> 0. "Содержимое из 2й таблицы отличается от содержимого 1й
      Append ls_intersection to ot_rows_with_mod_content.
    Endif.
  Endloop.

Endform. "get_rows_with_mod_content

*&-------------------------------------------------------------------*
*&   Подставить уникальный индекс в первую ячейку добавленных строк.
*& Проверить корректность введённых данных
*&-------------------------------------------------------------------*
Form alv_1_handle_data_changed
  using
    ir_data_changed type ref to cl_alv_changed_data_protocol.

  Field-symbols:
    <ft_mod_rows> type ty_t_data,
    <fs_mod_row> type ty_s_data.
  Data: lv_index type ty_s_data-unique_index,
        lt_mod_cells type lvc_t_modi,
        ls_mod_cell type lvc_s_modi,
        lv_stort type ty_s_data-stort,
        lv_stort_is_ok type boolean,
        lv_equnr type ty_s_data-equnr,
        lv_equnr_is_ok type boolean.

"Подставить мандант и уникальный индекс
  Perform get_max_index changing lv_index.
  Assign ir_data_changed->mp_mod_rows->* to <ft_mod_rows>.
  Loop at <ft_mod_rows> assigning <fs_mod_row> where unique_index = 0.
    Add 1 to lv_index.
    <fs_mod_row>-unique_index = lv_index.
    <fs_mod_row>-mandt = sy-mandt.
  Endloop.

"Проверить правильность введённого местоположения
  Move ir_data_changed->mt_mod_cells to lt_mod_cells.
  Sort lt_mod_cells by row_id.

  Loop at lt_mod_cells
    into ls_mod_cell
    where fieldname = gcs-data_table-stort.

    Call method ir_data_changed->get_cell_value
      exporting
        i_row_id    = ls_mod_cell-row_id
        i_fieldname = gcs-data_table-stort
      importing
        e_value     = lv_stort.

    Perform check_stort_is_ok using gcs-werks lv_stort changing lv_stort_is_ok.

    If lv_stort_is_ok <> gc_true.
      Call method ir_data_changed->add_protocol_entry
        exporting
          i_msgid = 'SU'
          i_msgno = '000'
          i_msgty = 'E'
          i_msgv1 = 'Местоположение'
          i_msgv2 = lv_stort
          i_msgv3 = 'не существует'
          i_fieldname = ls_mod_cell-fieldname
          i_row_id = ls_mod_cell-row_id.

    Endif.

  Endloop.

"Проверить правильность введённой единицы оборудования
  Loop at lt_mod_cells
    into ls_mod_cell
    where fieldname = gcs-data_table-equnr.

    Call method ir_data_changed->get_cell_value
      exporting
        i_row_id    = ls_mod_cell-row_id
        i_fieldname = gcs-data_table-stort
      importing
        e_value     = lv_stort.

    Call method ir_data_changed->get_cell_value
      exporting
        i_row_id    = ls_mod_cell-row_id
        i_fieldname = gcs-data_table-equnr
      importing
        e_value     = lv_equnr.

    Perform check_equnr_is_ok using lv_stort lv_equnr changing lv_equnr_is_ok.

    If lv_equnr_is_ok <> gc_true.
      Call method ir_data_changed->add_protocol_entry
        exporting
          i_msgid = 'SU'
          i_msgno = '000'
          i_msgty = 'E'
          i_msgv1 = 'Единица оборудования'
          i_msgv2 = lv_equnr
          i_msgv3 = 'не прошла проверку'
          i_fieldname = ls_mod_cell-fieldname
          i_row_id = ls_mod_cell-row_id.

    Endif.

  Endloop.

Endform. "alv_1_handle_data_changed

*&-------------------------------------------------------------------*
*&   Добавить свои кнопки на панель инструментов в ALV-гриде
*&-------------------------------------------------------------------*
Form alv_1_handle_toolbar
  using
    i_object type ref to cl_alv_event_toolbar_set.

  Data:
    ls_toolbar type stb_button.

  Clear ls_toolbar.
  ls_toolbar-butn_type = gcs-alv-toolbar-button_type-separator. "Разделитель
  Append ls_toolbar to i_object->mt_toolbar.

  If sy-dynnr = gcs-screens-data_change-number.
    Clear ls_toolbar.
    ls_toolbar-function = gcs-commands-alv-delete.
    ls_toolbar-butn_type = gcs-alv-toolbar-button_type-normal. "Обычная кнопка
    ls_toolbar-icon = gcs-icon_delete.
    ls_toolbar-text = 'Удалить'.
    ls_toolbar-quickinfo = 'Удалить выбранные строки'.
    Append ls_toolbar to i_object->mt_toolbar.

    Clear ls_toolbar.
    ls_toolbar-function = gcs-commands-alv-undelete.
    ls_toolbar-butn_type = gcs-alv-toolbar-button_type-normal. "Обычная кнопка
    ls_toolbar-icon = gcs-icon_undelete.
    ls_toolbar-text = 'Отменить удаление'.
    ls_toolbar-quickinfo = 'Отменить для выбранных строк'.
    Append ls_toolbar to i_object->mt_toolbar.
  Endif.

  If sy-dynnr = gcs-screens-data_change-number or
     sy-dynnr = gcs-screens-data_view-number.
    Clear ls_toolbar.
    ls_toolbar-function = gcs-commands-alv-excel.
    ls_toolbar-butn_type = gcs-alv-toolbar-button_type-normal. "Обычная кнопка
    ls_toolbar-icon = gcs-icon_excel.
    ls_toolbar-text = 'Выгрузить в Excel'.
    ls_toolbar-quickinfo = 'Выгрузить таблицу в файл Excel'.
    Append ls_toolbar to i_object->mt_toolbar.
  Endif.

Endform. "alv_1_handle_toolbar

*&-------------------------------------------------------------------*
*&   Обработать нажатие на свои кнопки, добавленные на панель инструментов
*&-------------------------------------------------------------------*
Form alv_1_handle_user_command
  using
    ir_alv type ref to cl_gui_alv_grid
    i_ucomm type sy-ucomm.

  Data:
    lv_row_count type i, "Кол-во строк, для которых был обработан флаг удаления
    lv_message type string.

  Case i_ucomm.

    When gcs-commands-alv-delete.
      Perform set_unset_deletion_flag
        using
          gc_true
          ir_alv
        changing
          gt_data
          lv_row_count.
      If lv_row_count = -1.
        Message s000(su) with 'Выберите строки кнопками слева'.
      Else.
        Message s000(su) with 'Строк помечено на удаление:'
                              lv_row_count
                              'шт.'.
      Endif.

    When gcs-commands-alv-undelete.
      Perform set_unset_deletion_flag
        using
          gc_false
          ir_alv
        changing
          gt_data
          lv_row_count.
      If lv_row_count = -1.
        Message s000(su) with 'Выберите строки кнопками слева'.
      Else.
        Message s000(su) with 'Удаление отменено для'
                              lv_row_count
                              'шт. строк'.
      Endif.

    When gcs-commands-alv-excel.
      Message i000(su) with 'Команда' i_ucomm 'пока не обрабатывается'.

    When others.
      Message i000(su) with 'Команда' i_ucomm 'пока не обрабатывается'.

  Endcase.

Endform. "alv_1_handle_user_command

*&-------------------------------------------------------------------*
*&   Поставить/снять в выделенных строках метку удаления
*&
*&  -> iv_set_deletion = флаг, если 'X' — то во всех выделенных строках ставить
*&                       метку удаления, иначе — снимать метку
*&
*&  -> ir_alv = ссылка на грид, в котором выделены строки
*& <-> ot_data = таблица, привязанная к гриду
*& <-> ov_row_count = количество строк, у которых был переключен флаг
*&     Если -1, то в гриде не было выделенных строк
*&-------------------------------------------------------------------*
Form set_unset_deletion_flag
  using
    iv_set_deletion type boolean
    ir_alv type ref to cl_gui_alv_grid
  changing
    ot_data type ty_t_data
    ov_row_count type i.

  Data:
    lt_selected_rows type lvc_t_roid,
    ls_selected_row type lvc_s_roid,
    lv_alv_deleted type ty_s_data-alv_deleted,
    lv_alv_row_color type ty_s_data-alv_row_color,
    ls_data type ty_s_data.

  Clear ov_row_count.

  Call method ir_alv->get_selected_rows
    importing
      et_row_no = lt_selected_rows.

  If lt_selected_rows is initial.
    ov_row_count = -1.
    Exit.
  Endif.

  If iv_set_deletion = gc_true.
    lv_alv_deleted = gc_true.
    lv_alv_row_color = gcs-alv-color-lightred.
  Else.
    Clear lv_alv_deleted.
    lv_alv_row_color = gcs-alv-color-default.
  Endif.

  Loop at lt_selected_rows into ls_selected_row.
    Read table ot_data into ls_data index ls_selected_row-row_id.
    If ls_data-alv_deleted <> lv_alv_deleted.
      Add 1 to ov_row_count.
    Endif.
    ls_data-alv_deleted = lv_alv_deleted.
    ls_data-alv_row_color = lv_alv_row_color.
    Modify ot_data from ls_data index ls_selected_row-row_id.
  Endloop.

"Обновить грид и снова выделить строки
  Call method ir_alv->refresh_table_display
    exporting
      is_stable = gcs-alv-stable_refresh.

  Call method ir_alv->set_selected_rows
    exporting
      it_row_no = lt_selected_rows.

Endform. "set_unset_deletion_flag

*&-------------------------------------------------------------------*
*&   Выбрать из таблицы ZPMP006_1 максимальное значение индекса
*&-------------------------------------------------------------------*
Form get_max_index
  changing
    ov_max_index type ZPMP006_1-UNIQUE_INDEX.

  Select max( UNIQUE_INDEX )
    into ov_max_index
    from ZPMP006_1.
  If sy-subrc <> 0.
    Message e000(su) with 'Ошибка в процедуре'
                          'get_max_index'.
  Endif.
Endform. "get_max_index

*&-------------------------------------------------------------------*
*&   Проверить существование местоположения
*&-------------------------------------------------------------------*
Form check_stort_is_ok
  using
    iv_werks type T499S-WERKS
    iv_stort type T499S-STAND
  changing
    ov_is_ok type boolean.

  Data:
    lv_stort like iv_stort.

  Select single STAND
    into lv_stort
    from T499S
    where WERKS = iv_werks
      and STAND = iv_stort.
  If sy-subrc = 0.
    ov_is_ok = gc_true.
  Else.
    ov_is_ok = gc_false.
  Endif.
Endform. "check_stort_is_ok

*&-------------------------------------------------------------------*
*&   Проверить соответствие между местоположением и единицей оборудования
*&-------------------------------------------------------------------*
Form check_equnr_is_ok
  using
    iv_stort type T499S-STAND "проверочное местоположение
    iv_equnr type EQUI-EQUNR "проверяемая единица оборудования
  changing
    ov_is_ok type boolean.

  Data:
    lv_max_eqlfn type ZPMP006_2-EQLFN,
    lv_stort like iv_stort.

"Выбрать актуальное (последнее) местоположение у ЕО
  Select max( EQLFN )
    into lv_max_eqlfn "если в один день было несколько записей, взять последнюю
    from ZPMP006_2
    where EQUNR = iv_equnr.
  Select single STORT "#EC * Ключ. полей хватает (в ракурсе DATBI = '9991231')
    into lv_stort
    from ZPMP006_2
    where EQUNR = iv_equnr
      and EQLFN = lv_max_eqlfn.
  If sy-subrc = 0 and
     lv_stort = iv_stort.
  "Актуальное местоположение в единице оборудования совпадает с проверочным
    ov_is_ok = gc_true.
  Else.
    ov_is_ok = gc_false.
  Endif.
Endform. "check_equnr_is_ok

*&-------------------------------------------------------------------*
*&   Обработать двойной щелчок по полю
*&-------------------------------------------------------------------*
Form alv_1_handle_double_click
  using
    is_column type lvc_s_col
    is_row_no type lvc_s_roid
    it_data type ty_t_data.

  Data: ls_data type ty_s_data.

  Read table it_data into ls_data index is_row_no-row_id.
  If sy-subrc = 0 and
     is_column-fieldname = gcs-data_table-equnr and
     ls_data-equnr is not initial.
  "Проверить существование ЕО (Call trans... and skip... не изменяет sy-subrc)
    Select single equnr
      from EQUI
      into ls_data-equnr
      where EQUNR = ls_data-equnr.
    If sy-subrc <> 0.
      Message s000(su) with 'Единица оборудования'
                            ls_data-equnr
                            'не найдена'
                       display like 'E'.
      Exit.
    Endif.
  "Единица оборудования существует, вызвать транзакцию просмотра
    Set parameter id gcs-transactions-equip_view-parid field ls_data-equnr.
    Call transaction gcs-transactions-equip_view-tcode and skip first screen.
  Endif.
Endform. "alv_1_handle_double_click

*&-------------------------------------------------------------------*
*&   Обработать щелчок по "горячему" полю аналогично двойному щелчку
*&-------------------------------------------------------------------*
Form alv_1_handle_hotspot_click
  using
    is_column type lvc_s_col
    is_row_no type lvc_s_roid
    it_data type ty_t_data.

  Perform alv_1_handle_double_click
    using is_column
          is_row_no
          it_data.
Endform. "alv_1_handle_hotspot_click

*&-------------------------------------------------------------------*
*&   Показать свою помощь по вводу (клавиша F4) для местоположения (STORT)
*& с ограничениями
*&-------------------------------------------------------------------*
Form alv_1_show_f4_stort
  using
    is_row_no type lvc_s_roid
    ir_event_data type ref to cl_alv_event_data
    it_restriction_strings type ty_t_strings.

  Types:
    begin of ty_s_restriction,
      stand type T499S-STAND,
    end of ty_s_restriction,
    ty_t_restrictions type standard table of ty_s_restriction.

  Constants:
  "Источник данных для помощи по вводу
    lc_tabname type tabname value 'T499S', "Изменил? Ищи from T499S, of T499S
    lc_field_1 type fieldname value 'STAND', "Поле со значением местоположения
    lc_field_2 type fieldname value 'KTEXT'. "Поле с поясняющим текстом

  Data:
    ls_restriction_string type ty_s_string,
    lt_restrictions type ty_t_restrictions,
    ls_restriction type ty_s_restriction,
    lt_data_source type table of T499S,
    ls_data_source like line of lt_data_source,
    ls_value type seahlpres,
    lt_values type table of seahlpres,
    ls_field  type dfies,
    lt_fields type table of dfies,
    lt_selected_sh_rows type standard table of ddshretval,
    ls_selected_sh_row type ddshretval,
    ls_modi type lvc_s_modi.

  Field-symbols:
    <ft_modi> type lvc_t_modi.

"Отказаться от стандартной помощи по вводу
  ir_event_data->m_event_handled = gc_true.

"Выбрать данные для помощи по вводу с учётом ограничений
  Loop at it_restriction_strings into ls_restriction_string.
    ls_restriction-stand = ls_restriction_string-string.
    Append ls_restriction to lt_restrictions.
  Endloop.
  Select *
    into table lt_data_source
    from T499S
    for all entries in lt_restrictions "Если нет ограничений — выбрать всё
      where STAND = lt_restrictions-stand.

"Перевести выбранные данные в формат "ячейка-за-ячейкой" (cell-by-cell)
  Loop at lt_data_source into ls_data_source.
    ls_value-string = ls_data_source-stand.
    Append ls_value to lt_values.
    ls_value-string = ls_data_source-ktext.
    Append ls_value to lt_values.
  Endloop.

"Задать набор столбцов для отображения выбранных данных
  ls_field-tabname   = lc_tabname.
  ls_field-fieldname = lc_field_1.
  Append ls_field to lt_fields.

  ls_field-tabname   = lc_tabname.
  ls_field-fieldname = lc_field_2.
  Append ls_field to lt_fields.

"Показать помощь по вводу во всплывающем окне
  Call function 'F4IF_INT_TABLE_VALUE_REQUEST'
    exporting
      retfield               = lc_field_1
      multiple_choice        = gc_false
      display                = gc_false
    tables
      value_tab              = lt_values
      field_tab              = lt_fields
      return_tab             = lt_selected_sh_rows
    exceptions
      parameter_error        = 1
      no_values_found        = 2
      others                 = 3
            .
  If sy-subrc <> 0.
  "Ошибка, показать сообщение и выйти
    Message id sy-msgid type sy-msgty number sy-msgno
        with sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
    Exit.
  Endif.

"Передать выбранное значение в ALV-грид
  Read table lt_selected_sh_rows into ls_selected_sh_row index 1.
  If sy-subrc <> 0.
  "Нет ни одной выбранной строки, выйти из подпрограммы
    Exit.
  Endif.
  ls_modi-value = ls_selected_sh_row-fieldval.
  ls_modi-fieldname = gcs-data_table-stort. "В поле "Местоположение"
  ls_modi-row_id = is_row_no-row_id.
  Assign ir_event_data->m_data->* to <ft_modi>.
  Append ls_modi to <ft_modi>. "Добавить к изменённым ячейкам ALV-грида
  Unassign <ft_modi>.

Endform. "alv_1_show_f4_stort

*&-------------------------------------------------------------------*
*&   Показать свою помощь по вводу (клавиша F4) для единицы оборудования (ЕО,
*& EQUNR) с учётом уже введённых данных в поля столбцов "Местоположение",
*& "Тип/модель", "Наименование", "Серийный номер".
*&-------------------------------------------------------------------*
Form alv_1_show_f4_equnr
  using
    is_data_row type ty_s_data
    is_row_no type lvc_s_roid
    ir_event_data type ref to cl_alv_event_data.

  Constants:
  "Источник данных для помощи по вводу
    lc_shlpname type shlpname value 'ZPMP006_1'.

  Data:
    ls_shlp type shlp_descr,
    ls_interface type ddshiface,
    ls_selopt type ddshselopt,
    lv_rc type sy-subrc,
    lt_selected_sh_rows type standard table of ddshretval,
    ls_selected_sh_row type ddshretval,
    ls_modi type lvc_s_modi.

  Field-symbols:
    <ft_modi> type lvc_t_modi.

"Отказаться от стандартной помощи по вводу
  ir_event_data->m_event_handled = gc_true.

"Получить описание средства поиска СП
  Call function 'F4IF_GET_SHLP_DESCR'
       exporting
            shlpname = lc_shlpname
       importing
            shlp     = ls_shlp.

"Дополнить описание СП: задать возвращаемые из СП поля
  Loop at ls_shlp-interface into ls_interface
    where shlpfield <> gcs-data_table-stort.
    "Все, кроме поля "Местоположение
      ls_interface-valfield = ls_interface-shlpfield.
      Modify ls_shlp-interface from ls_interface index sy-tabix.
  Endloop.

"Дополнить описание СП: ввести начальные ограничения в ls_shlp-selopt
  ls_selopt-shlpname = lc_shlpname.
  ls_selopt-sign = gcs-so-sign-include.
  ls_selopt-option = gcs-so-option-equals.
  If is_data_row-stort is not initial. "Местоположение
    ls_selopt-shlpfield = gcs-data_table-stort.
    ls_selopt-low = is_data_row-stort.
    Append ls_selopt to ls_shlp-selopt.
  Endif.

  If is_data_row-type is not initial. "Тип/модель
    ls_selopt-shlpfield = gcs-data_table-type.
    ls_selopt-option = gcs-so-option-contains_pattern.
    Concatenate gc_asterisk is_data_row-type gc_asterisk
      into ls_selopt-low.
    Append ls_selopt to ls_shlp-selopt.
  Endif.

  If is_data_row-serge is not initial. "Серийный номер
    ls_selopt-shlpfield = gcs-data_table-serge.
    ls_selopt-option = gcs-so-option-contains_pattern.
    Concatenate gc_asterisk is_data_row-serge gc_asterisk
      into ls_selopt-low.
    Append ls_selopt to ls_shlp-selopt.
  Endif.

  If is_data_row-equipment_name is not initial. "Наименование
    ls_selopt-shlpfield = gcs-data_table-equipment_name.
    ls_selopt-option = gcs-so-option-contains_pattern.
    Concatenate gc_asterisk is_data_row-equipment_name gc_asterisk
      into ls_selopt-low.
    Append ls_selopt to ls_shlp-selopt.
  Endif.


"Вызвать дополненную помощь по вводу (с заданными начальными ограничениями)
  Call function 'F4IF_START_VALUE_REQUEST'
       exporting
            shlp          = ls_shlp
       importing
            rc            = lv_rc
       tables
            return_values = lt_selected_sh_rows.

  Case lv_rc.
    When 0.
    "Выбранное значение находится в таблице lt_selected_sh_rows
    When 4.
      Message s000(su) with 'Значения не найдены'.
      Exit.
    When 8.
      Message s000(su) with 'Ничего не выбрано'.
      Exit.
    When others.
      Message s000(su) with 'Ошибка номер'
                            lv_rc
                            'при вызове ФМ F4IF_START_VALUE_REQUEST,'
                            'сообщите разработчикам'
                       display like 'E'.
      Exit. "Выйти из подпрограммы
  Endcase.

"Передать поля выбранной строки из СП в ALV-грид
  Assign ir_event_data->m_data->* to <ft_modi>.
  Loop at lt_selected_sh_rows into ls_selected_sh_row.
    ls_modi-value = ls_selected_sh_row-fieldval.
    ls_modi-fieldname = ls_selected_sh_row-fieldname.
    ls_modi-row_id = is_row_no-row_id.
    Append ls_modi to <ft_modi>. "Добавить поле к изменённым ячейкам ALV-грида
  Endloop.
  Unassign <ft_modi>.

Endform. "alv_1_show_f4_equnr
