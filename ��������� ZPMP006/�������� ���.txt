*&---------------------------------------------------------------------*
*& Report  ZPMP006
*&
*&---------------------------------------------------------------------*
*&   Программа для ведения базы данных по программному обеспечению, входящему
*& в состав автоматизированных систем управления технологическим процессом
*& (АСУТП) и средств измерения (СИ).
*&
*----------------------------------------------------------------------------
*  Префиксы в названиях
*    g = global, глобальное объявление (не используется в подпрограммах)
*    l = local, локальное объявление
*
*    t = table, таблица
*    s = structure, структура
*    v = value, переменная
*    c = constant, константа
*    f = field-symbol, указатель
*
*    i = input, входной параметр
*    o = output, выходной параметр
*
*    ty_  = type, тип
*    ty_s = type of structure, тип структуры
*    ty_t = type of table, тип таблицы
*--------------------------------------------------------------------*
Report  ZPMP006.

Tables:
  ZPMP006_1.

Constants:
  gc_true type boolean value 'X',
  gc_false type boolean value ' ',
  gc_asterisk type c length 1 value '*',
"Версия программы
  begin of gc_version,
    major type n length 1 value '0',
    minor type n length 2 value '86',
  end of gc_version,
"Глобальная структура с константами
  begin of gcs,
    insert_failed type i value '85', "Не удалось сохранить добавленные записи
  "Блокировки (функциональные модули ENQUEUE_*, DEQUEUE_*)
    begin of lock,
      begin of mode, "Режим блокирования
        shared type enqmode value 'S', "могут устанавливаться другие блокировки
        exclusive type enqmode value 'E', "другие не уст-ся, а эта расширяема
        ext_exclusive type enqmode value 'X', "не уст-ся и не расширяема
      end of mode,
      begin of scope, "Время действия блокировки (где она должна сбрасываться)
        min type ddenqscope value '1', "в программе
        med type ddenqscope value '2', "в процессе обновления
        max type ddenqscope value '3', "и в программе, и в процессе обновления
      end of scope,
    end of lock,
  "Коды иконок из вызова метода cl_icon->get_icon для...
    icon_delete type iconname value '@B_DELE@', "... 'ICON_DELETE'
    icon_undelete type iconname value '@F_UNDO@', "... 'ICON_SYSTEM_UNDO'
    icon_excel type iconname value '@X__XLS@', "... 'ICON_XLS'
    icon_log type iconname value '@B_RKHI@', "... 'ICON_HISTORY'
    werks type T499S-WERKS value '1000', "номер завода, для проверки местоположений
  "Select-options
    begin of so,
      begin of sign,
        include type c length 1 value 'I',
        exclude type c length 1 value 'E',
      end of sign,
      begin of option,
        equals type c length 2 value 'EQ',
        not_equals type c length 2 value 'NE',
        contains_pattern type c length 2 value 'CP',
      end of option,
    end of so,
  "Коды полномочий в таблице ZPM_USR
    begin of permission_string,
      create type ZPM_USR-OPERATION value 'CREATE',
      change type ZPM_USR-OPERATION value 'CHANGE',
      view type ZPM_USR-OPERATION value 'VIEW',
      delete type ZPM_USR-OPERATION value 'DELETE',
      all type ZPM_USR-OPERATION value 'ALL',
    end of permission_string,
  "Коды команд
    begin of commands,
    "Для ALV-грида
      begin of alv,
        delete type sy-ucomm value 'DELETE',
        undelete type sy-ucomm value 'UNDELETE',
        excel type sy-ucomm value 'EXCEL',
        show_log type sy-ucomm value 'LOG',
      end of alv,
    "Общие для всех экранов
      help type sy-ucomm value 'HELP',
      version type sy-ucomm value 'VERSION',
    "Начальный экран, экран выбора
      begin of sel_screen,
        goto_users type sy-ucomm value 'GOTO_USERS', "Изменил? Ищи user-command goto_users
        goto_new type sy-ucomm value 'GOTO_NEW', "Изменил? Ищи user-command goto_new
        goto_search type sy-ucomm value 'GOTO_SEARCH', "Изменил? Ищи user-command goto_search
        online type sy-ucomm value 'ONLI',
      end of sel_screen,
    "Экран для ввода новых записей, режим CREATE
      begin of create_screen,
        save type sy-ucomm value 'SAVE',
      end of create_screen,
    "Экран для изменения записей, режим CHANGE
      begin of change_screen,
        save type sy-ucomm value 'SAVE',
      end of change_screen,
    end of commands,
  "Номера экранов, gui-заголовков и gui-статусов, варианты внешнего вида ALV
    begin of screens,
    "gui-статусы
      begin of status,
        min type gui_status value '0001', "Минимум функций
        save type gui_status value '0002',"То же + сохранение
      end of status,
    "Экран для ввода новых записей, режим CREATE
      begin of data_create,
        number type sy-dynnr value '0010',
        title type gui_title value '0010',
      end of data_create,
    "Экран для изменения записей, режим CHANGE
      begin of data_change,
        number type sy-dynnr value '0020',
        title type gui_title value '0020',
        title_with_deleted type gui_title value '0021',
      end of data_change,
    "Экран для просмотра записей, режим VIEW
      begin of data_view,
        number type sy-dynnr value '0030',
        title type gui_title value '0030',
        title_with_deleted type gui_title value '0031',
      end of data_view,
    "Начальный экран, экран выбора
      begin of sel_screen,
        number type sy-dynnr value '1000',
        group_create type screen-group1 value 'CRE',"Изменил? Ищи modif id CRE
        group_change type screen-group1 value 'CHA',"Изменил? Ищи modif id CHA
        group_all type screen-group1 value 'ALL',"Изменил? Ищи modif id ALL
        group_stort_restriction_1 type screen-group1 value 'ID1',"Изменил? Ищи modif id ID1
        group_stort_restriction_2 type screen-group1 value 'ID2',"Изменил? Ищи modif id ID2
      end of sel_screen,
    "Экран для просмотра журнала изменений
      begin of log,
        number type sy-dynnr value '0040',
      end of log,
    "Экран для просмотра списка уполномоченных
      begin of users,
        number type sy-dynnr value '0130',
        title type gui_title value '0130',
      end of users,
    end of screens,
  "Общее для гридов (ALV-Grid)
    begin of alv,
    "Цвет
      begin of color,
        default type c length 4 value '', "белый для режима редактирования
        lightred type c length 4 value 'C600', "красный (6), не усиленный (0)
        red type c length 4 value 'C610', "красный (6), усиленный (1)
      end of color,
    "Строка кнопок, панель инструментов
      begin of toolbar,
        begin of button_type,
          normal type stb_button-butn_type value 0, "Обычная кнопка
          menu_default type stb_button-butn_type value 1, "Меню с умолчанием
          menu type stb_button-butn_type value 2, "Меню без кнопки по умолчанию
          separator type stb_button-butn_type value 3, "Разделитель
          radio type stb_button-butn_type value 4, "Радиокнопка
          checkbox type stb_button-butn_type value 5, "Кнопка-галочка
          menu_entry type stb_button-butn_type value 6, "Элемент меню
        end of button_type,
      end of toolbar,
    "Как можно сохранять внешний вид грида?
      begin of variant_save_modes,
        only_user type c length 1 value 'U', " только для пользователя — 'U'
        only_global type c length 1 value 'X',  "только глобально — 'X'
        all type c length 1 value 'A',          "обоими способами — 'A'
      end of variant_save_modes,
    "При обновлении грида не сдвигать полосу прокрутки по ...
      begin of stable_refresh,
        row type lvc_s_stbl-row value gc_true, "... вертикали
        col type lvc_s_stbl-col value gc_true, "... горизонтали
      end of stable_refresh,
    "Внутри грида в режиме просмотра можно выбрать...
      begin of sel_mode,
        default type lvc_s_layo-sel_mode value space, "смотри b
      "... минимум одну отдельную ячейку, нельзя выбрать несколько ячеек
        a type lvc_s_layo-sel_mode value 'A',
      "... минимум одну строку или один столбец, нельзя выбрать несколько строк
        b type lvc_s_layo-sel_mode value 'B',
      "... минимум одну строку или один столбец, можно выбрать несколько строк
        c type lvc_s_layo-sel_mode value 'C',
      "... минимум одну отдельную ячейку, можно выбрать несколько ячеек
        d type lvc_s_layo-sel_mode value 'D',
      end of sel_mode,
    end of alv,
  "Коды транзакций и названия идентификаторов параметров на начальном экране
    begin of transactions,
      begin of equip_view,
        tcode type TCODE value 'IE03',
        parid type TPARA-PARAMID value 'EQN',
      end of equip_view,
    end of transactions,
  "Название таблицы с данными и названия её столбцов
    begin of data_table,
      table_name type TABNAME value 'ZPMP006_1',
      key_mandt type NAME_FELD value 'MANDT',
      key_unique_index type NAME_FELD value 'UNIQUE_INDEX',
      stort type NAME_FELD value 'STORT',
      equnr type NAME_FELD value 'EQUNR',
      type type NAME_FELD value 'TYPE',
      serge type NAME_FELD value 'SERGE',
      equipment_name type NAME_FELD value 'EQUIPMENT_NAME',
      manufact_name type NAME_FELD value 'MANUFACT_NAME',
      manufact_place type NAME_FELD value 'MANUFACT_PLACE',
      project type NAME_FELD value 'PROJECT',
      date_start type NAME_FELD value 'DATE_START',
      software_name type NAME_FELD value 'SOFTWARE_NAME',
      version_original type NAME_FELD value 'VERSION_ORIGINAL',
      version_mod type NAME_FELD value 'VERSION_MOD',
      dev_environment type NAME_FELD value 'DEV_ENVIRONMENT',
      mod_cause type NAME_FELD value 'MOD_CAUSE',
      mod_worker type NAME_FELD value 'MOD_WORKER',
      mod_date type NAME_FELD value 'MOD_DATE',
      num_of_copies type NAME_FELD value 'NUM_OF_COPIES',
      commentary type NAME_FELD value 'COMMENTARY',
      deleted type NAME_FELD value 'DELETED',
      change_date type NAME_FELD value 'CHANGE_DATE',
      change_time type NAME_FELD value 'CHANGE_TIME',
      change_name type NAME_FELD value 'CHANGE_NAME',
      alv_row_color type NAME_FELD value 'ALV_ROW_COLOR',
      alv_deleted type NAME_FELD value 'ALV_DELETED',
    end of data_table,
  end of gcs,
"Название таблицы с журналом изменений и названия её столбцов
  begin of gcs_log_table, "Вне gcs-* для того, чтобы обращаться к gcs-*
    table_name type TABNAME value 'ZPMP006_3',
    key_mandt type NAME_FELD value gcs-data_table-key_mandt,
    key_unique_index type NAME_FELD value gcs-data_table-key_unique_index,
    key_change_date type NAME_FELD value gcs-data_table-change_date,
    key_change_time type NAME_FELD value gcs-data_table-change_time,
    key_change_name type NAME_FELD value gcs-data_table-change_name,
    key_field_name type NAME_FELD value 'FIELD_NAME',
    field_label type NAME_FELD value 'FIELD_LABEL',
    value_new type NAME_FELD value 'VALUE_NEW',
    value_old type NAME_FELD value 'VALUE_OLD',
    alv_row_color type NAME_FELD value gcs-data_table-alv_row_color,
  end of gcs_log_table,
"Название ракурса со списком уполномоченных и названия отображаемых столбцов
  begin of gcs_user_table, "Вне gcs-* для того, чтобы обращаться к gcs-*
    table_name type TABNAME value 'ZPMP006_4',
    begin of col_set,
      begin of full,
        department type LVC_FNAME value 'DEPARTMENT',
        user_name type LVC_FNAME value 'NAME_TEXT',
        user_surname type LVC_FNAME value 'NAME_LAST',
        function type LVC_FNAME value 'FUNCTION',
        phone type LVC_FNAME value 'TEL_EXTENS',
        building type LVC_FNAME value 'BUILDING',
        room type LVC_FNAME value 'ROOMNUMBER',
        operation type LVC_FNAME value 'OPERATION',
        restrictions type LVC_FNAME value 'RESTRICTIONS',
        change_date type LVC_FNAME value 'CHANGE_DATE',
        change_name type LVC_FNAME value 'CHANGE_NAME',
      end of full,
      begin of reduced,
        department type LVC_FNAME value 'DEPARTMENT',
        user_name type LVC_FNAME value 'NAME_TEXT',
        user_surname type LVC_FNAME value 'NAME_LAST',
        function type LVC_FNAME value 'FUNCTION',
        phone type LVC_FNAME value 'TEL_EXTENS',
      end of reduced,
    end of col_set,
  end of gcs_user_table.

*&-------------------------------------------------------------------*
*& Обработчик событий для всех типов ALV-гридов, объявление
*&-------------------------------------------------------------------*
Class lcl_grid_event_handler definition final.
  Public section.
    Methods:
      handle_toolbar "Для добавления своих кнопок в панель инструментов
        for event toolbar of cl_gui_alv_grid
          importing sender
                    e_object
                    e_interactive, "#EC NEEDED
      handle_user_command
        for event user_command of cl_gui_alv_grid
          importing sender
                    e_ucomm,
      handle_hotspot_click
        for event hotspot_click of cl_gui_alv_grid
          importing sender
                    e_column_id
                    es_row_no,
      handle_double_click
        for event double_click of cl_gui_alv_grid
          importing sender
                    e_column
                    es_row_no,
      handle_onf4
        for event onf4 of cl_gui_alv_grid
          importing sender
                    e_fieldname
                    e_fieldvalue "#EC NEEDED
                    es_row_no
                    er_event_data,
      handle_data_changed
        for event data_changed of cl_gui_alv_grid
          importing sender
                    er_data_changed,
      on_dialogbox_close
        for event close of cl_gui_dialogbox_container.
  Private section.
    "Пусто
Endclass.

Types:
  begin of ty_s_string,
    string type string,
  end of ty_s_string,
  ty_t_strings type standard table of ty_s_string,
  ty_t_data type ZPMP006_1_TABLE_TYPE,
  ty_s_data type line of ty_t_data,
  ty_s_log type ZPMP006_3,
  ty_t_log type standard table of ty_s_log,
  ty_s_user type ZPMP006_4,
  ty_t_users type standard table of ty_s_user,
"Набор объектов для отображения ALV-гридов
  begin of ty_s_alv,
  "Данные по ПО = грид типа 1
    begin of data,
      r_grid type ref to cl_gui_alv_grid,
      r_handler type ref to lcl_grid_event_handler,
      r_cont type ref to cl_gui_docking_container,
      r_protocol_cont type ref to cl_gui_dialogbox_container, "всплывающее окно
      t_fcat type lvc_t_fcat,
      t_sort type lvc_t_sort,
      t_excl type ui_functions,
      t_f4 type lvc_t_f4,
      s_layo type lvc_s_layo,
      s_vari type disvariant,
      v_save type char01,
    end of data,
  "Журнал изменений во всплывающем окне = грид типа 2
    begin of log,
      r_grid type ref to cl_gui_alv_grid,
      r_handler type ref to lcl_grid_event_handler,
      r_cont type ref to cl_gui_dialogbox_container, "всплывающее окно
      t_fcat type lvc_t_fcat,
      t_sort type lvc_t_sort,
      t_excl type ui_functions,
      s_layo type lvc_s_layo,
    end of log,
  "Список уполномоченных
    begin of users,
      r_grid type ref to cl_gui_alv_grid,
      r_cont type ref to cl_gui_docking_container,
      t_fcat type lvc_t_fcat,
      t_sort type lvc_t_sort,
      t_excl type ui_functions,
      s_layo type lvc_s_layo,
      v_save type char01,
    end of users,
  end of ty_s_alv.

Data:
  gv_variant_is_correct type boolean, "Введённый на экране выбора формат верен
"Ограничения на поле ZPMP006_1-STORT "Местоположение"
  gt_create_stort_restrictions type ty_t_strings, "для операции CREATE
  gt_change_stort_restrictions type ty_t_strings, "для операции CHANGE
  "gv_r_cre – эта глобальная переменная определена как Selection-screen comment
  "gv_r_cha – эта глобальная переменная определена как Selection-screen comment

  gt_data type ty_t_data, "Главная внутренняя таблица с данными
  gt_data_before type ty_t_data, "Состояние gt_data при переходе на экран изменений
  gt_log_data type ty_t_log, "Внутренняя таблица с данными журнала изменений
  gt_user_data type ty_t_users,
  gv_row_count type i, "Количество строк в gt_*data после выборки из БД
  begin of gs_permissions,
    create type boolean value gc_false,
    change type boolean value gc_false,
    view type boolean value gc_false,
    delete type boolean value gc_false,
    all type boolean value gc_false,
  end of gs_permissions,
  gs_alv type ty_s_alv. "Глобальный набор объектов для отображения ALV-гридов


*&-------------------------------------------------------------------*
*& Обработчик событий для всех типов ALV-гридов, реализация
*&-------------------------------------------------------------------*
Class lcl_grid_event_handler implementation.
  Method handle_toolbar.
  "Переключение между гридами
    Case sender.
      When gs_alv-data-r_grid.
        Perform alv_1_handle_toolbar
          using e_object
                .
      When others.
        Message i000(SU)
          with 'Событие toolbar'
               'не обрабатывается для этого ALV-Grid''а'.
    Endcase.
  Endmethod.
  Method handle_user_command.
  "Переключение между гридами
    Case sender.
      When gs_alv-data-r_grid.
        Perform alv_1_handle_user_command
          using sender
                e_ucomm
                .
      When others.
        Message i000(SU)
          with 'Событие toolbar'
               'не обрабатывается для этого ALV-Grid''а'.
    Endcase.
  Endmethod.
  Method handle_hotspot_click.
  "Переключение между гридами
    Case sender.
      When gs_alv-data-r_grid.
        Perform alv_1_handle_hotspot_click
          using e_column_id
                es_row_no
                gt_data
                .
      When others.
        Message i000(SU)
          with 'Событие hotspot_click'
               'не обрабатывается для этого ALV-Grid''а'.
    Endcase.
  Endmethod.
  Method handle_double_click.
  "Переключение между гридами
    Case sender.
      When gs_alv-data-r_grid.
        Perform alv_1_handle_double_click
          using e_column
                es_row_no
                gt_data
                .
      When others.
        Message i000(SU)
          with 'Событие double_click'
               'не обрабатывается для этого ALV-Grid''а'.
    Endcase.
  Endmethod.
  Method handle_onf4.
  "Переключение между гридами
    Case sender.
      When gs_alv-data-r_grid.
        Case e_fieldname.
          When gcs-data_table-stort. "Местоположение
            Data:
              lt_restrictions type ty_t_strings. "Ограничения
          "Заполнить таблицу с ограничениями
            Case sy-dynnr.
              When gcs-screens-data_create-number.
                Move gt_create_stort_restrictions to lt_restrictions.
              When gcs-screens-data_change-number.
                Move gt_change_stort_restrictions to lt_restrictions.
              When others.
              "Оставить стандартную помощь по вводу
                Exit.
            Endcase.
          "Показать свою помощь по вводу (с ограничениями)
            Perform alv_1_show_f4_stort
              using es_row_no
                    er_event_data
                    lt_restrictions
                    .
          When gcs-data_table-equnr. "Единица оборудования
            Data:
              ls_data_row type ty_s_data.
          "Считать строку, в которой стоит курсор
            Read table gt_data into ls_data_row index es_row_no-row_id.
          "Показать свою помощь по вводу
            Perform alv_1_show_f4_equnr
              using ls_data_row
                    es_row_no
                    er_event_data
                    .
          When others.
            Message i000(SU)
              with 'Событие onf4'
                   'не обрабатывается для этого поля'.
        Endcase.
      When others.
        Message i000(SU)
          with 'Событие onf4'
               'не обрабатывается для этого ALV-Grid''а'.
    Endcase.
  Endmethod.
  Method handle_data_changed.
    Case sender.
      When gs_alv-data-r_grid.
        "Использовать экземпляр класса, передаваемый через сообщение
        Perform alv_1_handle_data_changed
          using er_data_changed
                .
      When others.
        Message i000(SU)
          with 'Событие data_changed'
               'не обрабатывается для этого ALV-Grid''а'.
    Endcase.
  Endmethod.
  Method  on_dialogbox_close.
    Case me.
      When gs_alv-data-r_handler.
      "Скрыть список ошибок в списке ПО = грид типа 1
        Call method gs_alv-data-r_protocol_cont->set_visible
          exporting
            visible = gc_false.

      When gs_alv-log-r_handler.
      "Уничтожить объекты журнала изменений = грид типа 2
        Perform exit_screen
          using gcs-screens-log-number
                .
    Endcase.
  Endmethod.
Endclass.

*--- Экран выбора ------------------------------------------------------------*
"Блок элементов для пользователя с полномочиями на всё
Selection-screen begin of block b01 with frame.
  Selection-screen pushbutton /1(40)
    text-012
    user-command goto_users.
Selection-screen end of block b01.

"Блок для CREATE (операция "Добавить")
Selection-screen begin of block b10 with frame.
  Selection-screen pushbutton /1(40)
    text-101
    user-command goto_new
    modif id CRE. "Добавить
  Selection-screen comment 42(40) gv_r_cre
    modif id CRE.
Selection-screen end of block b10.

"Блок для CHANGE/VIEW (операции "Изменить", "Просмотреть")
Selection-screen begin of block b20 with frame.
  Selection-screen begin of block b21 with frame title text-211.
    Selection-screen comment 1(40) gv_r_cha
      modif id ID2.
    Select-options:
      so1_strt for ZPMP006_1-STORT modif id ID1,
      so1_eqnr for ZPMP006_1-EQUNR,
      so1_type for ZPMP006_1-TYPE,
      so1_serg for ZPMP006_1-SERGE,
      so1_name for ZPMP006_1-EQUIPMENT_NAME,
      so1_man2 for ZPMP006_1-MANUFACT_NAME,
      so1_man1 for ZPMP006_1-MANUFACT_PLACE,
      so1_proj for ZPMP006_1-PROJECT,
      so1_date for ZPMP006_1-DATE_START.
  Selection-screen end of block b21.
  Selection-screen begin of block b22 with frame title text-221.
    Select-options:
      so2_name for ZPMP006_1-SOFTWARE_NAME,
      so2_vero for ZPMP006_1-VERSION_ORIGINAL,
      so2_verm for ZPMP006_1-VERSION_MOD,
      so2_denv for ZPMP006_1-DEV_ENVIRONMENT,
      so2_mcau for ZPMP006_1-MOD_CAUSE,
      so2_mwor for ZPMP006_1-MOD_WORKER,
      so2_mdat for ZPMP006_1-MOD_DATE,
      so2_numc for ZPMP006_1-NUM_OF_COPIES.
  Selection-screen end of block b22.
  Select-options:
    so3_comm for ZPMP006_1-COMMENTARY,
    so3_chad for ZPMP006_1-CHANGE_DATE,
    so3_chat for ZPMP006_1-CHANGE_TIME,
    so3_chan for ZPMP006_1-CHANGE_NAME.
  Parameters:
  "show_deleted = показывать удалённые данные.
    p_show_d as checkbox
      modif id ALL "показывается, если есть полномочия на всё
      default space, "по-умолчанию удалённые данные не показываются
  "toggle change = включить/выключить режим изменения
    p_tog_ch as checkbox
      modif id CHA "показывается, если есть полномочия на операцию CHANGE
      user-command selscr_toggle_change "команда, вызываемая по переключению
      default space, "изначально режим изменения выключен, чтобы сообщение
        "о наличии ограничений для операции CREATE в статусной строке не
        "перебивалось аналогичным сообщением для операции CHANGE
  "Формат грида
    p_vari type slis_vari.
  Selection-screen pushbutton /1(40)
    text-201
    user-command goto_search. "Искать
Selection-screen end of block b20.

*--- При запуске программы, выполняется однократно ---------------------------*
Initialization.
  gs_permissions-view = gc_true. "Нет проверки полномочий на просмотр — смотрят все
  Perform check_permission
    using sy-repid
          sy-uname
          gcs-permission_string-change
          gcs-permission_string-all
    changing gs_permissions-change
          .
  Perform check_permission
    using sy-repid
          sy-uname
          gcs-permission_string-create
          gcs-permission_string-all
    changing gs_permissions-create
          .
  Perform check_permission
    using sy-repid
          sy-uname
          gcs-permission_string-delete
          gcs-permission_string-all
    changing gs_permissions-delete
          .
  Perform check_permission
    using sy-repid
          sy-uname
          gcs-permission_string-all
          gcs-permission_string-all
    changing gs_permissions-all
          .
  "Не пускать, если нет ни полномочий на VIEW, ни на любое другое действие
  If gs_permissions-view   = gc_false and
     gs_permissions-change = gc_false and
     gs_permissions-create = gc_false and
     gs_permissions-delete = gc_false.

    "Сообщение типа E в событии Initialization равнозначно выходу из программы
    Message e000(SU)
      with 'У пользователя'
           sy-uname
           'недостаточно полномочий на работу с программой'
           sy-repid.
  Endif.

"Показать ограничения или их отсутствие для операции CREATE
  If gs_permissions-create = gc_true.
  "Есть полномочия на операцию CREATE
    If gs_permissions-all <> gc_true.
    "Нет полномочий на всё, выбрать ограничения для операции CREATE
      Perform get_op_restrictions
        using sy-repid
              sy-uname
              gcs-permission_string-create
              'STORT'
        changing gt_create_stort_restrictions
              .
    Endif.
    If gt_create_stort_restrictions is initial.
    "Нет ограничений на местоположение для операции CREATE
      Perform show_create_stort_full.
    Else.
    "Показать один раз сообщение об ограничениях в статусной строке
      Message s000(su)
        with 'Действуют ограничения на местоположение'
             'для операции "Добавить"'.
    "Задать один раз (не меняется далее) поясняющий текст (блок для CREATE)
      Perform show_create_stort_restricted
        using gt_create_stort_restrictions
              .
    Endif.
  Endif.
"Показать ограничения или их отсутствие для операции CHANGE
  If gs_permissions-change = gc_true and
     gs_permissions-all <> gc_true.
  "Есть полномочия на операцию CHANGE и нет полномочий на всё
  "Выбрать ограничения для операции CHANGE
    Perform get_op_restrictions
      using sy-repid
            sy-uname
            gcs-permission_string-change
            'STORT'
      changing gt_change_stort_restrictions
            .
  Endif.

*--- Запрос помощи по вводу (F4) для поля p_vari
At selection-screen on value-request for p_vari.
  Perform get_variant_list
    using sy-repid
          sy-uname
    changing p_vari
          .

*--- Перед отображением экрана выбора ----------------------------------------*
At selection-screen output.
  If gs_permissions-create <> gc_true.
    Perform hide_screen_element_group
      using gcs-screens-sel_screen-group_create
            .
  Endif.
  If gs_permissions-change <> gc_true.
    Perform hide_screen_element_group
      using gcs-screens-sel_screen-group_change
            .
  Endif.
"Спрятать то, чему требуются полномочия на всё, если этих полномочий нет
  If gs_permissions-all <> gc_true.
    Perform hide_screen_element_group
      using gcs-screens-sel_screen-group_all
            .
  Endif.

"Определить, как показывать параметр "Местоположение" (блок для CHANGE/VIEW)
  If gs_permissions-all = gc_true or
     p_tog_ch <> gc_true or
     ( p_tog_ch = gc_true and
       gt_change_stort_restrictions is initial ).
  "Ограничения на местоположение не действуют, так как
  " либо 1) есть полномочия на всё (ALL)
  " либо 2) режим изменения выключен,
  " либо 3) включён режим изменения и ограничений на местоположение нет
    Perform show_change_stort_full.
  Else.
  "Действуют ограничения на местоположение
    Message s000(su)
      with 'Действуют ограничения на местоположение'
           'для операции "Изменить"'.
    Perform show_change_stort_restricted
      using gt_change_stort_restrictions.
  Endif.

*--- Реакция на нажатие кнопок на экране выбора ------------------------------*
At selection-screen.
  Perform dispatch_user_command
    using sy-dynnr
    changing sy-ucomm
          .

*--- Нажатие "Выполнить" (F8) на экране выбора (sy-ucomm = 'ONLI') -----------*
Start-of-selection.
  Perform check_variant
    using p_vari
          sy-repid
    changing gv_variant_is_correct.
  If gv_variant_is_correct <> gc_true.
    Message i000(su)
      with 'Формат'
           p_vari
           'не найден!'
      display like 'E'.
    Exit.
  Endif.
  Perform get_data
    using p_show_d
    changing gt_data
             gv_row_count
          .
  If gv_row_count = 0. "Обработать результат выборки из БД, вхождение 1 из 3
    Message i000(SU)
      with 'Не найдено ни одной записи'.
    Exit.
  Else.
    Message s000(SU)
      with 'Записей найдено:'
           gv_row_count
           'шт.'.
  Endif.


*--- Выборка из базы данных завершена ----------------------------------------*
End-of-selection.
  Call screen gcs-screens-data_view-number.


*--- Экранные модули, начало -------------------------------------------------*
Module init_screen output. "Общий для всех экранов — установить GUI-статус
  Set pf-status gcs-screens-status-min. "Установить минимальный набор функций
  "Инициировать экземпляр ALV-Grid'а и заголовок, соответствующие текущему экрану
  Case sy-dynnr.
    When gcs-screens-data_create-number.
      Set pf-status gcs-screens-status-save. "Минимум + сохранение
      Set titlebar gcs-screens-data_create-title.
      Perform alv_1_display
        using gcs-screens-data_create-number
              gs_permissions-all
              p_show_d
              p_vari
        changing gt_data
                 gs_alv-data
              .
      Call method gs_alv-data-r_grid->set_ready_for_input
        exporting
          i_ready_for_input = 1
          .
      "Считать, что в таблице пусто, т.е. можно только добавлять новые записи
      Refresh gt_data_before. "Запомнить содержимое до изменений, 1 из 3

    When gcs-screens-data_change-number.
      Set pf-status gcs-screens-status-save. "Минимум + сохранение
      If p_show_d = gc_true.
        Set titlebar gcs-screens-data_change-title_with_deleted.
      Else.
        Set titlebar gcs-screens-data_change-title.
      Endif.
      Perform alv_1_display
        using gcs-screens-data_change-number
              gs_permissions-all
              p_show_d
              p_vari
        changing gt_data
                 gs_alv-data
              .
      Call method gs_alv-data-r_grid->set_ready_for_input
        exporting
          i_ready_for_input = 1
          .
      Move gt_data to gt_data_before. "Запомнить содержимое до изменений, 2 из 3

    When gcs-screens-data_view-number.
      If p_show_d = gc_true.
        Set titlebar gcs-screens-data_view-title_with_deleted.
      Else.
        Set titlebar gcs-screens-data_view-title.
      Endif.
      Perform alv_1_display
        using gcs-screens-data_view-number
              gs_permissions-all
              p_show_d
              p_vari
        changing gt_data
                 gs_alv-data
              .
      Call method gs_alv-data-r_grid->set_ready_for_input
        exporting
          i_ready_for_input = 0
          .

    When gcs-screens-users-number.
      Set titlebar gcs-screens-users-title.
      Perform alv_3_display
        using gcs-screens-users-number
              gs_permissions-all
        changing gt_user_data
                 gs_alv-users
              .
      Call method gs_alv-users-r_grid->set_ready_for_input
        exporting
          i_ready_for_input = 0
          .
    When others.
      Message i000(SU)
        with 'Отображение ALV-Grid''а на экране'
             sy-dynnr
             'не сделано'.
  Endcase.
Endmodule. "init_screen

Module dispatch_user_command input.
  Perform dispatch_user_command
    using sy-dynnr
    changing sy-ucomm
          .
Endmodule. "dispatch_user_command

Module exit_screen input. "Общий для всех экранов — обработать команду выхода
  Perform exit_screen
    using sy-dynnr
          .
Endmodule. "exit_screen
*--- Экранные модули, конец --------------------------------------------------*

*&-------------------------------------------------------------------*
*&   Общая обработка команд от пользователя на всех экранах
*&-------------------------------------------------------------------*
Form dispatch_user_command
  using
    iv_dynnr type sy-dynnr
  changing
    ov_ucomm type sy-ucomm.

  Data:
    lv_ucomm type sy-ucomm,
    ls_data type ty_s_data,
    lv_string type string.

  lv_ucomm = ov_ucomm. "ov_ucomm очищается при успешном завершении подпрограммы

  If lv_ucomm is initial.
    Exit.
  Endif.

  "Искать команду в списке команд, общих для всех экранов.
  "Если найдена — обработать и выйти из этой подпрограммы.
  Case lv_ucomm.
    When gcs-commands-help.
      Perform show_help.
      Exit.
    When gcs-commands-version.
      Perform show_version
        using gc_version
              .
      Exit.
    When others.
      "Команда не найдена в списке команд, общих для всех экранов.
      "Продолжить поиск.
  Endcase.

  "Искать команду в списке команд, специфичных для указанного экрана
  Case iv_dynnr.
    "Команды на экране выбора
    When gcs-screens-sel_screen-number.

      Case lv_ucomm.

        When gcs-commands-sel_screen-goto_users.
          Perform get_user_data
            using gs_permissions-all
            changing gt_user_data
                     gv_row_count
                  .
          If gv_row_count = 0.
            Message i000(su)
              with 'Для программы'
                   'нет пользователей с полномочиями на'
                   'добавление/изменение данных'.
          Else.
            Call screen gcs-screens-users-number.
          Endif.

        When gcs-commands-sel_screen-goto_new.
          Call screen gcs-screens-data_create-number.

        When gcs-commands-sel_screen-goto_search.
          Perform check_variant
            using p_vari
                  sy-repid
            changing gv_variant_is_correct.
          If gv_variant_is_correct <> gc_true.
            Message i000(su)
              with 'Формат'
                   p_vari
                   'не найден!'
              display like 'E'.
            Exit.
          Endif.
          Perform get_data
            using p_show_d
            changing gt_data
                     gv_row_count
                  .
          If gv_row_count = 0. "Обработать результат выборки из БД, вхождение 2 из 3
            Message i000(SU)
              with 'Не найдено ни одной записи'.
            Exit.
          Else.
            Message s000(SU)
              with 'Записей найдено:'
                   gv_row_count
                   'шт.'.
          Endif.

          If gc_true = p_tog_ch.
          "Установить блокировку на все найденные записи
            Loop at gt_data into ls_data.
              Call function 'ENQUEUE_EZPMP006_1'
                exporting
                  mode_zpmp006_1       = gcs-lock-mode-exclusive
                  mandt                = sy-mandt
                  unique_index         = ls_data-unique_index
                  x_unique_index       = gc_true
                  _scope               = gcs-lock-scope-min
                  _wait                = gc_false
                  _collect             = gc_true "собрать в один пакет
                        .
            Endloop.
            Call function 'FLUSH_ENQUEUE' "обработать собранный пакет
              exceptions
                foreign_lock         = 1
                system_failure       = 2
                others               = 3
                      .
            Case sy-subrc.
              When 0.
              "Перейти на экран CHANGE
                Call screen gcs-screens-data_change-number.
              When 1.
                Concatenate 'Пользователь'
                            sy-msgv1
                  into lv_string
                  separated by space.
                Message s000(su)
                  with lv_string
                       'изменяет запрошенные вами данные.'
                       'Включён режим просмотра'
                  display like 'E'.
              "Перейти на экран VIEW
                Call screen gcs-screens-data_view-number.
              When others.
                Message id sy-msgid
                  type sy-msgty
                  number sy-msgno
                  with sy-msgv1
                       sy-msgv2
                       sy-msgv3
                       sy-msgv4.
                Exit.
            Endcase.
          Else.
            Call screen gcs-screens-data_view-number.
          Endif.

        When gcs-commands-sel_screen-online. "Нажатие "Выполнить" (F8) на экране выбора
          "ничего не делать, обработка находится в событии Start-of-selection

        When 'SELSCR_TOGGLE_CHANGE'.
          "обработка находится в событии At selection-screen output

        When others. "Команда не найдена в списке обрабатываемых
          "Ничего не делать = стандартные команды на экране выбора и так обрабатываются
          Exit.

      Endcase.

    When gcs-screens-data_create-number.
      Case lv_ucomm.
        When gcs-commands-create_screen-save.
          Perform save_data
            using gs_alv-data
            changing gt_data_before
                     gt_data
                  .
          If sy-subrc <> gcs-insert_failed.
          "Вернуться на экран выбора после успешного сохранения
            Perform exit_screen
              using gcs-screens-data_create-number
                    .
          Endif.
        When others. "Команда не найдена в списке обрабатываемых
          Message i000(SU)
            with 'На экране'
                 iv_dynnr
                 'не обрабатывается команда'
                 lv_ucomm.
      Endcase.

    When gcs-screens-data_change-number.
      Case lv_ucomm.
        When gcs-commands-change_screen-save.
          Perform save_data
            using gs_alv-data
            changing gt_data_before
                     gt_data
                  .
        "Обновить грид, сохраняя горизонтальную/вертикальную позиции прокрутки
          Call method gs_alv-data-r_grid->refresh_table_display
            exporting
              is_stable = gcs-alv-stable_refresh.
        When others. "Команда не найдена в списке обрабатываемых
          Message i000(SU)
            with 'На экране'
                 iv_dynnr
                 'не обрабатывается команда'
                 lv_ucomm.
      Endcase.

    "Команды на остальных экранах = на экране со списком ЕО
    When others.
      Message i000(SU)
        with 'На экране'
             iv_dynnr
             'не обрабатывается команда'
             lv_ucomm.
  Endcase.

  Clear ov_ucomm. "ov_ucomm очищается при успешном завершении подпрограммы
Endform. "dispatch_user_command

*&-------------------------------------------------------------------*
*&   Показать справку по программе (сейчас это список скрытых команд)
*&-------------------------------------------------------------------*
Form show_help.
  Message i000(SU)
   with 'Скрытые команды: HELP, VERSION'.
Endform. "show_help

*&-------------------------------------------------------------------*
*&   Показать информацию о версии программы (инф. берётся из констант)
*&-------------------------------------------------------------------*
Form show_version using ic_version like gc_version.
  Data:
    lv_message type string,
    lv_changed_date type TRDIR-UDAT,
    lv_date_string type c length 10,
    lv_changed_by type TRDIR-UNAM,
    lv_substring type string.

  Move sy-title to lv_message.
  Concatenate lv_message
              ', версия '
              ic_version-major
              '.'
              ic_version-minor
    into lv_message
    respecting blanks.

  Select single UDAT UNAM
    from TRDIR
    into (lv_changed_date, lv_changed_by)
    where NAME = sy-repid
         .
  If sy-subrc <> 0.
    lv_substring = 'Последнее изменение неизвестно (таблица TRDIR).'.
  Else.
    Write lv_changed_date to lv_date_string.
    Concatenate 'Последнее изменение сделано'
                lv_date_string
                'пользователем'
                lv_changed_by
      into lv_substring
      separated by space.
  Endif.

  Concatenate lv_message
              lv_substring
    into lv_message
    separated by '. '.
  Message lv_message type 'I'.
Endform. "show_version

*&-------------------------------------------------------------------*
*&   Снять блокировки и уничтожить объекты на указанном экране, перейти на
*& предыдущий
*&-------------------------------------------------------------------*
Form exit_screen
  using iv_dynnr like sy-dynnr.

  Data:
    ls_data type ty_s_data,
  "Чтобы ловить исключительные ситуации
    lv_exc_text type string,
    lr_exception type ref to cx_root.

"Снять блокировки
  Case iv_dynnr.
    When gcs-screens-data_change-number.
    "Снять блокировку со всех записей
      Loop at gt_data into ls_data.
        Call function 'DEQUEUE_EZPMP006_1'
          exporting
            mode_zpmp006_1       = gcs-lock-mode-exclusive
            mandt                = sy-mandt
            unique_index         = ls_data-unique_index
            x_unique_index       = gc_true
            _scope               = gcs-lock-scope-min
            _collect             = gc_true "собрать в один пакет
                  .
      Endloop.
      Call function 'FLUSH_ENQUEUE'  "обработать собранный пакет
        exceptions
          foreign_lock         = 1
          system_failure       = 2
          others               = 3
                .
      If sy-subrc <> 0.
        Message i000(su)
          with 'Ошибка'
               sy-subrc
               'при вызове ФМ FLUSH_ENQUEUE'.
        "Продолжить выполнение подпрограммы
      Endif.
    When others.
    "Ничего не делать
  Endcase.

"Уничтожить использовавшиеся на экране объекты
  Case iv_dynnr.
  "Экраны с гридом типа 1 — gs_alv-data
    When gcs-screens-data_create-number or
         gcs-screens-data_change-number or
         gcs-screens-data_view-number.
      Try.
        Call method gs_alv-data-r_grid->free.
        Call method gs_alv-data-r_cont->free.
        Call method gs_alv-data-r_protocol_cont->free.
      Catch cx_root into lr_exception. "#EC CATCH_ALL
        Call method lr_exception->if_message~get_text
          receiving
            result = lv_exc_text.
        Message i000(SU)
         with 'Исключительная ситуация при вызове методов Free:'
              lv_exc_text.
      Endtry.
      Free: gs_alv-data-r_grid, gs_alv-data-r_cont, gs_alv-data-r_handler,
            gs_alv-data-r_protocol_cont,
            gt_data, gt_data_before,
            gs_alv-data-t_fcat, gs_alv-data-t_sort, gs_alv-data-t_excl,
            gs_alv-data-t_f4,
            gs_alv-data-s_layo, gs_alv-data-s_vari,
            gs_alv-data-v_save.

  "Окно (не экран) для просмотра журнала изменений, грид типа 2 — gs_alv-log
    When gcs-screens-log-number.
      Try.
        Call method gs_alv-log-r_grid->free.
        Call method gs_alv-log-r_cont->free.
      Catch cx_root into lr_exception. "#EC CATCH_ALL
        Call method lr_exception->if_message~get_text
          receiving
            result = lv_exc_text.
        Message i000(SU)
         with 'Исключительная ситуация при вызове методов Free:'
              lv_exc_text.
      Endtry.

      Free: gs_alv-log-r_grid, gs_alv-log-r_cont, gs_alv-log-r_handler,
            gt_log_data,
            gs_alv-log-t_fcat, gs_alv-log-t_sort, gs_alv-log-t_excl,
            gs_alv-log-s_layo.
      Exit. "Не возвращаться на пред. экран — обраб-ся закрытие окна, не экрана

  "Экран для просмотра списка уполномоченных, грид типа 3 — gs_alv-users
    When gcs-screens-users-number.
      Try.
        Call method gs_alv-users-r_grid->free.
        Call method gs_alv-users-r_cont->free.
      Catch cx_root into lr_exception. "#EC CATCH_ALL
        Call method lr_exception->if_message~get_text
          receiving
            result = lv_exc_text.
        Message i000(SU)
         with 'Исключительная ситуация при вызове методов Free:'
              lv_exc_text.
      Endtry.
      Free: gs_alv-users-r_grid, gs_alv-users-r_cont,
            gt_user_data,
            gs_alv-users-t_fcat, gs_alv-users-t_sort, gs_alv-users-t_excl,
            gs_alv-users-s_layo.

    When others.
      Message i000(SU)
        with 'Модуль exit_screen не обрабатывает экран'
             iv_dynnr.
      Exit.

  Endcase.

"Вернуться на предыдущий экран, с которого был вызван текущий
  Leave to screen 0.
Endform. "exit_screen

*&-------------------------------------------------------------------*
*&   Есть ли в таблице ZPM_USR полномочия на указанную операцию? Поиск идёт по
*& первичному ключу (поля PROGNAME, UNAME, OPERATION). Ищутся полномочия на
*& указанную операцию i_operation или на всё (i_all).
*&
*&  -> i_program_name = соответствует ключевому полю PROGNAME в таблице ZPM_USR
*&  -> i_usr_name = -//- полю UNAME -//-
*&  -> i_operation = -//- полю OPERATION -//-
*&  -> i_all = значение, соответствующее полномочиям на всё
*&-------------------------------------------------------------------*
Form check_permission
  using
    i_program_name type progname
    i_user_name  type xubname
    i_operation type zpm_auth_operation
    i_all type zpm_auth_operation
  changing
    o_allowed type boolean.

  Data: ls_zpm_usr type ZPM_USR.

  Select single *
    from ZPM_USR
    into ls_zpm_usr
    where PROGNAME = i_program_name and
          UNAME = i_user_name and
          ( OPERATION = i_operation or
            OPERATION = i_all )
         .
  If sy-subrc <> 0.
    o_allowed = gc_false.
  Else.
    o_allowed = gc_true.
  Endif.
Endform. "check_permission

*&-------------------------------------------------------------------*
*&   Скрыть на текущем экране элементы управления, принадлежащие
*& указанной группе.
*&
*&  -> iv_group_name = название группы, элементы которой будут скрыты
*&-------------------------------------------------------------------*
Form hide_screen_element_group
  using iv_group_name type screen-group1.

  Loop at screen.
    If screen-group1 = iv_group_name.
      screen-active = 0.
    Endif.
    Modify screen.
  Endloop.
Endform. "hide_screen_element_group

*&-------------------------------------------------------------------*
*&   Показать на текущем экране элементы управления, принадлежащие
*& указанной группе.
*&
*&  -> iv_group_name = название группы, элементы которой будут показаны
*&-------------------------------------------------------------------*
Form show_screen_element_group
  using iv_group_name type screen-group1.

  Loop at screen.
    If screen-group1 = iv_group_name.
      screen-active = 1.
    Endif.
    Modify screen.
  Endloop.
Endform. "show_screen_element_group

*&-------------------------------------------------------------------*
*&   Показать (блок для CHANGE/VIEW) поле "Местоположение" с ограничениями:
*& 1) скрыть поле множественного выбора SO1_STRT "Местоположение",
*& 2) задать его значения из ограничений,
*& 3) показать ограничения через Selection-screen comment gv_r_cha.
*&   Глобальные объекты: so1_strt, gv_r_cha
*&
*&  -> it_restrictions = таблица со значениями, которые нужно задать
*&-------------------------------------------------------------------*
Form show_change_stort_restricted
  using it_restrictions type ty_t_strings.

  Data:
    ls_so1_strt like line of so1_strt,
    ls_restriction type ty_s_string.

"Скрыть поле множественного выбора SO1_STRT "Местоположение"
  Perform hide_screen_element_group
    using gcs-screens-sel_screen-group_stort_restriction_1
          .

"Задать значения поля из ограничений
  Refresh so1_strt[].
  Clear so1_strt.
  Clear gv_r_cha.

  ls_so1_strt-sign = 'I'.
  ls_so1_strt-option = gcs-so-option-equals.

  Loop at it_restrictions into ls_restriction.
    ls_so1_strt-low = ls_restriction-string.
    Append ls_so1_strt to so1_strt[].
    Concatenate gv_r_cha
                ls_restriction-string
      into gv_r_cha
      separated by space.
  Endloop.

"Показать ограничения через Selection-screen comment gv_r_cha
  Concatenate text-212
              gv_r_cha
    into gv_r_cha.
  Perform show_screen_element_group
    using gcs-screens-sel_screen-group_stort_restriction_2
          .

Endform. "show_change_stort_restricted

*&-------------------------------------------------------------------*
*&   Показать (блок для CHANGE/VIEW) поле "Местоположение" без ограничений:
*& 1) показать поле множественного выбора SO1_STRT "Местоположение",
*& 2) очистить поле SO1_STRT,
*& 3) скрыть Selection-screen comment gv_r_cha.
*&   Глобальные объекты: so1_strt, gv_r_cha
*&
*&  -> it_restrictions = таблица со значениями, которые нужно задать
*&-------------------------------------------------------------------*
Form show_change_stort_full.

"Показать поле множественного выбора SO1_STRT "Местоположение"
  Perform show_screen_element_group
    using gcs-screens-sel_screen-group_stort_restriction_1
          .

"Очистить поле SO1_STRT
  Refresh so1_strt[].
  Clear so1_strt.

"Скрыть Selection-screen comment gv_r_cha
  Clear gv_r_cha.
  Perform hide_screen_element_group
    using gcs-screens-sel_screen-group_stort_restriction_2
          .

Endform. "show_change_stort_full

*&-------------------------------------------------------------------*
*&   Показать (блок для CREATE) наличие ограничений на "Местоположение":
*& 1) задать текст для Selection-screen comment gv_r_cre.
*&   Глобальные объекты: gv_r_cre
*&-------------------------------------------------------------------*
Form show_create_stort_restricted
  using it_restrictions type ty_t_strings.

  Data: ls_restriction type ty_s_string.
"Задать текст для Selection-screen comment gv_r_cre
  gv_r_cre = text-212.
  Loop at it_restrictions into ls_restriction.
    Concatenate gv_r_cre
                ls_restriction-string
      into gv_r_cre
      separated by space.
  Endloop.
Endform. "show_create_stort_restricted

*&-------------------------------------------------------------------*
*&   Показать (блок для CREATE) отсутствие ограничений на "Местоположение":
*& 1) задать текст для Selection-screen comment gv_r_cre.
*&   Глобальные объекты: gv_r_cre
*&-------------------------------------------------------------------*
Form show_create_stort_full.
"Задать текст для Selection-screen comment gv_r_cre
  Concatenate text-212
              'нет'
    into gv_r_cre
    separated by space.
Endform. "show_create_stort_full

*&-------------------------------------------------------------------*
*&   Выбрать из таблицы ZPM_USR ограничения на операцию i_operation, которую
*& пользователь i_user_name может производить в программе i_program_name над
*& объектами типа i_restriction_type. Добавить выбранные значения в выходную
*& таблицу ot_values.
*&
*&  -> i_program_name = соответствует ключевому полю PROGNAME в таблице ZPM_USR
*&  -> i_usr_name = -//- полю UNAME -//-
*&  -> i_operation = -//- полю OPERATION -//-
*&  -> i_restriction_type = тип объектов, например 'STORT', смотри документацию
*&     к элементу данных ZPM_AUTH_OP_RESTRICTIONS
*& <-> ot_restrictions = таблица с выбранными ограничениями
*&-------------------------------------------------------------------*
Form get_op_restrictions
  using
    i_program_name type progname
    i_user_name  type xubname
    i_operation type zpm_auth_operation
    i_restriction_type type zpm_auth_op_restrictions
  changing ot_restrictions type ty_t_strings.

  Data:
    lv_SQL_string type string,
    lv_restrictions type string,
    lt_split_values type standard table of string,
    lv_split_value type string,
    ls_restriction type ty_s_string.

  Refresh ot_restrictions.

  Concatenate i_restriction_type
              '%'
    into lv_SQL_string.

  Select single restrictions
    from ZPM_USR
    into lv_restrictions
    where PROGNAME = i_program_name and
          UNAME = i_user_name and
          OPERATION = i_operation and
          RESTRICTIONS like lv_SQL_string
         .
  If sy-subrc <> 0.
    Exit.
  Endif.

"В переменную lv_restrictions выбраны ограничения, формат = 'STORT;13;38;85'
  Split lv_restrictions at ';' into table lt_split_values.
  Loop at lt_split_values from 2 into lv_split_value.
    ls_restriction-string = lv_split_value.
    Append ls_restriction to ot_restrictions.
  Endloop.
Endform. "get_op_restrictions

*&-------------------------------------------------------------------*
*&   Заполнить внутреннюю таблицу данными из базы данных
*&
*&  -> iv_show_deleted = показывать удалённые данные
*& <-> ot_data = внутренняя таблица (источник задан константой — ZPMP006_1)
*& <-> ov_count = количество строк, выбранных из БД во внутреннюю таблицу
*&-------------------------------------------------------------------*
Form get_data
  using
    iv_show_deleted type boolean
  changing
    ot_data type ty_t_data
    ov_count type i.

  Data: ls_data type ty_s_data.

"Select перезаписывает таблицу ot_data
  If iv_show_deleted <> gc_true.
  "Показывать только неудалённые данные
    Select *
      from ZPMP006_1
      into corresponding fields of table ot_data
      where STORT in so1_strt and
            EQUNR in so1_eqnr and
            TYPE in so1_type and
            SERGE in so1_serg and
            EQUIPMENT_NAME in so1_name and
            MANUFACT_NAME in so1_man2 and
            MANUFACT_PLACE in so1_man1 and
            DATE_START in so1_date and
            PROJECT in so1_proj and
            SOFTWARE_NAME in so2_name and
            VERSION_ORIGINAL in so2_vero and
            VERSION_MOD in so2_verm and
            DEV_ENVIRONMENT in so2_denv and
            MOD_CAUSE in so2_mcau and
            MOD_WORKER in so2_mwor and
            MOD_DATE in so2_mdat and
            NUM_OF_COPIES in so2_numc and
            COMMENTARY in so3_comm and
            CHANGE_DATE in so3_chad and
            CHANGE_TIME in so3_chat and
            CHANGE_NAME in so3_chan and
            DELETED eq gc_false
         .
    ov_count = sy-dbcnt.
    Exit.
  Endif.
"Показывать и удалённые, и неудалённые данные
  Select *
    from ZPMP006_1
    into corresponding fields of table ot_data
    where STORT in so1_strt and
          EQUNR in so1_eqnr and
          TYPE in so1_type and
          SERGE in so1_serg and
          EQUIPMENT_NAME in so1_name and
          MANUFACT_NAME in so1_man2 and
          MANUFACT_PLACE in so1_man1 and
          DATE_START in so1_date and
          PROJECT in so1_proj and
          SOFTWARE_NAME in so2_name and
          VERSION_ORIGINAL in so2_vero and
          VERSION_MOD in so2_verm and
          DEV_ENVIRONMENT in so2_denv and
          MOD_CAUSE in so2_mcau and
          MOD_WORKER in so2_mwor and
          MOD_DATE in so2_mdat and
          NUM_OF_COPIES in so2_numc and
          COMMENTARY in so3_comm and
          CHANGE_DATE in so3_chad and
          CHANGE_TIME in so3_chat and
          CHANGE_NAME in so3_chan
         .
  ov_count = sy-dbcnt.
  Loop at ot_data into ls_data.
    If ls_data-deleted = gc_true.
      ls_data-alv_deleted = gc_true.
      ls_data-alv_row_color = gcs-alv-color-lightred.
      Modify ot_data from ls_data index sy-tabix.
    Endif.
  Endloop.
Endform. "get_data

*&-------------------------------------------------------------------*
*&   Подготовить набор объектов, необходимый для отображения ALV-грида
*& Структура грида заполняется из таблицы ZPMP006_1, которая задана
*& через глобальную константу gcs-data_table-table_name.
*&
*&  -> iv_dynnr = номер экрана, для которого подготавливается ALV-грид
*&  -> iv_can_save_v_globally = можно сохранять вариант и для себя, и для всех
*&  -> iv_show_deleted = показывать удалённые данные
*&  -> iv_variant = название варианта внешнего вида, который нужно установить
*& <-> ot_fieldcat = структура грида (список столбцов ALV)
*& <-> ot_sort = правила сортировки
*& <-> ot_excl = список кнопок, убираемых с панели инструментов ALV-грида
*& <-> ot_f4 = список полей, к которым подключена собственная помощь по вводу
*& <-> os_layout = общие настройки внешнего вида
*& <-> os_variant = вариант внешнего вида (имя программы, варианта, ...)
*& <-> ov_save_mode = как позволяется сохранять внешний вид грида
*&-------------------------------------------------------------------*
Form alv_1_prepare
  using
    iv_dynnr type sy-dynnr
    iv_can_save_v_globally type boolean
    iv_show_deleted type boolean
    iv_variant type slis_vari
  changing
    ot_fieldcat type lvc_t_fcat
    ot_sort type lvc_t_sort
    ot_excl type ui_functions
    ot_f4 type lvc_t_f4
    os_layout type lvc_s_layo
    os_variant type disvariant
    ov_save_mode type char01.

  Data:
    ls_fcat type lvc_s_fcat,
    ls_sort type lvc_s_sort,
    ls_excl type ui_func,
    ls_f4 type lvc_s_f4.

"Field catalog
  Call function 'LVC_FIELDCATALOG_MERGE'
    exporting
      i_structure_name             = gcs-data_table-table_name
    changing
      ct_fieldcat                  = ot_fieldcat
    exceptions
      others                       = 1
            .
  If sy-subrc <> 0.
    Message e000(SU)
      with 'Ошибка при заполнении fieldcat для ALV на экране'
           iv_dynnr
           'из таблицы'
           gcs-data_table-table_name.
    Exit.
  Endif.

  Loop at ot_fieldcat into ls_fcat.
  "Обработать все столбцы
    If ls_fcat-fieldname = gcs-data_table-key_mandt or
       ls_fcat-fieldname = gcs-data_table-key_unique_index or
       ls_fcat-fieldname = gcs-data_table-deleted.
    "Скрыть столбцы, чьи поля относятся к первичному ключу или к служебным
      ls_fcat-no_out = gc_true.
    Else.
    "Показываемые столбцы сделать доступными для изменения содержимого
      ls_fcat-edit = gc_true.
    "Ещё нужно вызвать метод set_ready_for_input, что сделано в другом месте
    Endif.

  "Сделать "горячими" поля столбца "Единица оборудования" для режима VIEW
    If ls_fcat-fieldname = gcs-data_table-equnr and
       iv_dynnr = gcs-screens-data_view-number.
      ls_fcat-hotspot = gc_true.
    Endif.

  "Обработать полномочия на показ удалённых данных
    If ls_fcat-fieldname = gcs-data_table-deleted and
       iv_show_deleted = gc_true and
       iv_dynnr <> gcs-screens-data_create-number.
      ls_fcat-no_out = gc_false. "Показывать столбец "Удалено"
      ls_fcat-edit = gc_false. "Запретить изменение (изменять только кнопками)
    Endif.

  "Сделать некоторые столбцы недоступными для изменения содержимого
    If ls_fcat-fieldname = gcs-data_table-stort or "Ввод через помощь по вводу
       ls_fcat-fieldname = gcs-data_table-change_date or
       ls_fcat-fieldname = gcs-data_table-change_time or
       ls_fcat-fieldname = gcs-data_table-change_name.
      ls_fcat-edit = gc_false.
    Endif.

  "Не показывать столбцы с данными о последнем изменении на экране CREATE
    If iv_dynnr = gcs-screens-data_create-number and
       ( ls_fcat-fieldname = gcs-data_table-change_date or
         ls_fcat-fieldname = gcs-data_table-change_time or
         ls_fcat-fieldname = gcs-data_table-change_name ).
      ls_fcat-no_out = gc_true.
    Endif.

    Modify ot_fieldcat from ls_fcat.
  Endloop.

"Sort
  ls_sort-spos = 1.
  ls_sort-fieldname = gcs-data_table-stort.
  ls_sort-down = gc_false.
  ls_sort-up = gc_true.
  Append ls_sort to ot_sort.

  ls_sort-spos = 2.
  ls_sort-fieldname = gcs-data_table-equipment_name.
  ls_sort-down = gc_false.
  ls_sort-up = gc_true.
  Append ls_sort to ot_sort.

"Убрать кнопки
  If iv_dynnr = gcs-screens-data_change-number.
  "На экране CHANGE отключено добавление новых строк, из-за этого действие
  "кнопок mc_fc_loc_paste и mc_fc_loc_paste_new_row одинаково => одна не нужна
    ls_excl = cl_gui_alv_grid=>mc_fc_loc_paste_new_row."Вставить в новую строку
    Append ls_excl to ot_excl.
  Endif.

  ls_excl = cl_gui_alv_grid=>mc_mb_sum. "Кнопки "Суммы", "Подсуммы"
  Append ls_excl to ot_excl.

  ls_excl = cl_gui_alv_grid=>mc_fc_graph. "Кнопка "Графика"
  Append ls_excl to ot_excl.

"Обработать полномочия на работу с внешним видом грида
  If iv_can_save_v_globally <> gc_true.
  "Задать, что можно сохранять варианты внешнего вида только для себя
    ov_save_mode = gcs-alv-variant_save_modes-only_user.
  Else.
  "Задать, что можно сохранять внешний вид и для себя, и для всех (глобально)
    ov_save_mode = gcs-alv-variant_save_modes-all.
  Endif.

"Помощь по вводу (клавиша F4)
  ls_f4-register = gc_true.
  ls_f4-getbefore = gc_false.
  ls_f4-chngeafter = gc_false.
  ls_f4-fieldname = gcs-data_table-stort. "Местоположение
  Insert ls_f4 into table ot_f4. "Insert вместо Append т.к. таблица — sorted
  ls_f4-fieldname = gcs-data_table-equnr. "Единица оборудования
  Insert ls_f4 into table ot_f4. "Insert вместо Append т.к. таблица — sorted

"Layout
  os_layout-cwidth_opt = gc_true.
  os_layout-sel_mode = gcs-alv-sel_mode-d.
  os_layout-info_fname = gcs-data_table-alv_row_color.

"Variant = вариант внешнего вида
  os_variant-report = sy-repid.
  os_variant-variant = iv_variant.

"Обработка экранов
  Case iv_dynnr.
    When gcs-screens-data_create-number. "Для экрана CREATE
    "Убрать кнопки
      ls_excl = cl_gui_alv_grid=>mc_mb_variant. "Кнопки "Формат" — внешний вид
      Append ls_excl to ot_excl.
    "Использовать внешний вид по-умолчанию (все столбцы)
      Clear os_variant-variant.

    When gcs-screens-data_change-number. "Для экрана CHANGE
    "Убрать возможность добавления/удаления строк стандартными средствами ALV
      os_layout-no_rowins = gc_true.
  Endcase.
Endform. "alv_1_prepare

*&-------------------------------------------------------------------*
*&   Показать/обновить грид типа 1 на текущем экране в контейнере
*& класса cl_gui_docking_container. Данные для грида — в ot_data.
*& Структура и внешний вид грида задаются подпрограммой alv_1_prepare
*& из таблицы ZPMP006_1, которая задана через глобальную константу
*& gcs-data_table-table_name. Если входной параметр iv_variant пуст, то
*& устанавливается внешний вид по-умолчанию.
*&
*&  -> iv_dynnr = номер экрана, на котором будет отображён ALV-грид
*&  -> iv_can_save_v_globally = можно сохранять вариант и для себя, и для всех
*&  -> iv_show_deleted = показывать удалённые данные
*&  -> iv_variant = название варианта внешнего вида, который нужно установить
*& <-> ot_data = внутренняя таблица с данными из таблицы БД
*& <-> os_alv = набор объектов, необходимый для отображения ALV-грида
*&
*&-------------------------------------------------------------------*
Form alv_1_display
  using
    iv_dynnr type sy-dynnr
    iv_can_save_v_globally type boolean
    iv_show_deleted type boolean
    iv_variant type slis_vari
  changing
    ot_data type ty_t_data
    os_alv type ty_s_alv-data.

  If os_alv-r_grid is initial.
  "Контейнер для списка ПО: на весь экран, без полос прокрутки
    Create object os_alv-r_cont
      exporting
        repid         = sy-repid
        dynnr         = sy-dynnr
        side          = cl_gui_docking_container=>dock_at_top
        extension     = cl_gui_docking_container=>ws_maximizebox
      exceptions
        others        = 1
        .
    If sy-subrc <> 0.
      Message e000(SU)
        with 'Не удалось создать экземпляр'
             'docking-контейнера на экране'
             iv_dynnr.
      Exit.
    Endif.

  "Контейнер для списка ошибок в списке ПО
    Create object os_alv-r_protocol_cont
      exporting
        width         = 792
        height        = 216
        repid         = sy-repid
        dynnr         = sy-dynnr
        top           = 100
        left          = 200
        caption       = 'Список ошибок'
      exceptions
        others        = 1
        .
    If sy-subrc <> 0.
      Message e000(SU)
        with 'Не удалось создать экземпляр'
             'dialogbox-контейнера на экране'
             iv_dynnr.
      Exit.
    Endif.

  "Список ПО
    Create object os_alv-r_grid
      exporting
        i_parent          = os_alv-r_cont
        i_applogparent    = os_alv-r_protocol_cont "привязать список ошибок
      exceptions
        others            = 1
        .
    If sy-subrc <> 0.
      Message e000(SU)
        with 'Не удалось создать экземпляр ALV-Grid''а на экране'
             iv_dynnr.
      Exit.
    Endif.

  "Скрыть список ошибок в списке ПО
    Call method gs_alv-data-r_protocol_cont->set_visible
      exporting
        visible = gc_false.
  "Не заносить ошибки в протокол, просто помечать ячейки в гриде красным
    Call method os_alv-r_grid->activate_display_protocol
      exporting
        i_dialog          = gc_false.

    "Задать способ подтягивания изменений в таблице ALV-Grid'а
    Call method os_alv-r_grid->register_edit_event
      exporting
*        i_event_id = cl_gui_alv_grid=>mc_evt_enter "Enter либо двойной щелчок
        i_event_id = cl_gui_alv_grid=>mc_evt_modified "Выход из ячейки (по Tab)
      exceptions
        others     = 1
            .
    If sy-subrc <> 0.
      Message e000(SU)
        with 'Исключ. ситуация при вызове'
             'os_alv-r_grid->register_edit_event'
             'на экране'
             iv_dynnr.
      Exit.
    Endif.

    Perform alv_1_prepare
      using
        iv_dynnr
        iv_can_save_v_globally
        iv_show_deleted
        iv_variant
      changing
        os_alv-t_fcat
        os_alv-t_sort
        os_alv-t_excl
        os_alv-t_f4
        os_alv-s_layo
        os_alv-s_vari
        os_alv-v_save
            .

    Create object os_alv-r_handler.
    Set handler os_alv-r_handler->handle_toolbar for os_alv-r_grid.
    Set handler os_alv-r_handler->handle_user_command for os_alv-r_grid.
    Set handler os_alv-r_handler->handle_hotspot_click for os_alv-r_grid.
    Set handler os_alv-r_handler->handle_double_click for os_alv-r_grid.
    Set handler os_alv-r_handler->handle_onf4 for os_alv-r_grid.
    Set handler os_alv-r_handler->handle_data_changed for os_alv-r_grid.
    Set handler os_alv-r_handler->on_dialogbox_close for os_alv-r_protocol_cont.

    Call method os_alv-r_grid->register_f4_for_fields
      exporting
        it_f4                         = os_alv-t_f4.

    Call method os_alv-r_grid->set_table_for_first_display
      exporting
        is_layout                     = os_alv-s_layo
        is_variant                    = os_alv-s_vari
        i_save                        = os_alv-v_save
        it_toolbar_excluding          = os_alv-t_excl
      changing
        it_outtab                     = ot_data
        it_fieldcatalog               = os_alv-t_fcat
        it_sort                       = os_alv-t_sort
      exceptions
        others                        = 1
            .
    If sy-subrc <> 0.
      Message e000(SU)
        with 'Исключ. ситуация при вызове метода'
             'os_alv-r_grid->set_table_for_first_display'
             'на экране'
             iv_dynnr.
      Exit.
    Endif.

  Else.
  "Обновить грид, сохраняя горизонтальную/вертикальную позиции прокрутки
    Call method os_alv-r_grid->refresh_table_display
      exporting
        is_stable = gcs-alv-stable_refresh.
  Endif.
Endform. "alv_1_display

*&-------------------------------------------------------------------*
*&   Сохранить данные, введённые в ALV-грид. Сохраняемые строки находятся
*& через сравнение содержимого привязанной к ALV-гриду внутренней таблицы в
*& два момента: до и после вызова метода check_changed_data. Особый случай —
*& строки, помеченные на удаление через нестандартную (свою) кнопку DELETE. Они
*& определяются, как изменённые стандартными средствами ALV-грида, переносятся
*& из таблицы изменённых lt_mod_rows к таблице удалённых lt_del_rows.
*&
*&   Если при сохранении происходит ошибка, то выдаётся сообщение типа E. Если
*& save_data была вызвана из модуля PAI, то после сообщения типа E обработка
*& модуля прекращается, экран остаётся прежним, объекты не сбрасываются — можно
*& исправить ошибку и попробовать сохранить ещё раз.
*&
*&   -> is_alv = структура объектов, относящихся к ALV-гриду
*&  <-> ot_data =  таблица, привязанная к ALV-гриду в методе
*&      set_table_for_first_display класса cl_gui_alv_grid
*&-------------------------------------------------------------------*
Form save_data
  using
    is_alv type ty_s_alv-data
  changing
    ot_data_before type ty_t_data
    ot_data type ty_t_data.

  Data:
    lv_data_is_valid type c length 1,
  "Строки, которые после вызова метода cl_gui_alv_grid->check_changed_data...
    lt_del_rows type ty_t_data, "... оказались удалены из грида
    lt_ins_rows type ty_t_data, "... оказались вставлены в грид
    lt_mod_rows type ty_t_data, "... оказались изменены в гриде (новые значения)
    lt_mod_rows_old type ty_t_data, "-//- (старые значения)
  "Кол-во строк, которые оказались удалены/вставлены/изменены в гриде
    begin of ls_num_of,
      deleted type i,
      inserted type i,
      modified type i,
    end of ls_num_of,
  "Для подтягивания изменений, которые делаются функ. модулями ZPMP006_1_*.
    lt_data_source type ty_t_data, "Содержимое таблиц del, ins, mod
    ls_data_source type ty_s_data, "Строка с данными из таблиц del, ins, mod
    ls_data_destination type ty_s_data, "Строка для записи в ot_data
  "Для сообщений
    lv_string type string.


"Проверить ячейки ALV-грида, которые уже подтянуты в связанную таблицу ot_data
" (подтянуты автоматически, т.к. mc_evt_modified)
  Call method is_alv-r_grid->check_changed_data
    importing
      e_valid   = lv_data_is_valid
      .
  If lv_data_is_valid is initial.
    Message e000(su)
      with 'Ошибка в данных, сохранение не выполнено'.
    Exit.
  Endif.

"Перенести сброс флага alv_deleted на флаг deleted, чтобы обновить запись в БД
  Loop at ot_data into ls_data_destination
    where deleted = gc_true and
          alv_deleted = gc_false.
    ls_data_destination-deleted = gc_false.
    Modify ot_data from ls_data_destination index sy-tabix.
  Endloop.

"Найти отличия между тем, что было в гриде до и после вызова check_changed_data
  "Обработать удалённые строки
    Perform subtract_set  "Из "До" вычесть "После"
      using ot_data_before
            ot_data
      changing lt_del_rows
            .
  "Обработать добавленные строки
    Perform subtract_set  "Из "После" вычесть "До"
      using ot_data
            ot_data_before
      changing lt_ins_rows
            .
  "Обработать изменённые строки
    Perform get_rows_with_mod_content
      using ot_data
            ot_data_before
      changing lt_mod_rows
               lt_mod_rows_old
            .
"Определены все удалённые/добавленные/изменённые стандартными средствами строки
"Перенести к удалённым строкам те из изменённых, что были удалены нестандартно,
"то есть те, что посчитаны как изменённые стандартно.
  Loop at lt_mod_rows into ls_data_source where alv_deleted = gc_true.
    Delete lt_mod_rows index sy-tabix. "Удалить из одной таблицы (новое знач.)
    Delete lt_mod_rows_old index sy-tabix. "-//- (старое знач.)
    Append ls_data_source to lt_del_rows. "Вставить в другую таблицу
  Endloop.

"Применить изменения к таблице ZPMP006_1
  Call function 'ZPMP006_1_DELETE'
    exporting
      iv_do_commit = gc_false
    importing
      o_num_of_processed = ls_num_of-deleted
    changing
      ct_records = lt_del_rows
    exceptions
      db_error = 1.
  If sy-subrc <> 0.
    Message e000(su)
      with 'Ошибка'
           sy-subrc
           'при вызове ZPMP006_1_DELETE.'
           'Содержимое базы данных не изменено.'.
    Exit.
  Endif.
  Do.
    Call function 'ZPMP006_1_INSERT'
      exporting
        iv_do_commit = gc_false
      importing
        o_num_of_processed = ls_num_of-inserted
      changing
        ct_records = lt_ins_rows
      exceptions
        max_index_error = 1
        foreign_lock_error = 2
        other_lock_error = 3
        db_error = 4
        nums_not_equal = 5.
    Case sy-subrc.
      When 0.
      "Вставка новых записей успешно завершена
        Exit.
      When 2.
      "Вставка была заблокирована, повторить
        If sy-index >= 3. "повторять не более 3 раз
          Concatenate 'Пользователь'
                      sy-msgv1
            into lv_string
            separated by space.
          Message i000(su)
            with lv_string
                 'блокирует добавление новых записей.'
                 'Содержимое базы данных не изменено.'
                 'Повторите попытку'.
          Exit. "Выйти из цикла Do...Enddo.
        Endif.
        Wait up to 1 seconds. "Выдержать интервал в 1 секунду
        Continue.
      When others.
        Message e000(su)
          with 'Ошибка'
               sy-subrc
               'при вызове ZPMP006_1_INSERT.'
               'Содержимое базы данных не изменено.'.
        Exit.
    Endcase.
  Enddo.
  If lv_string is not initial.
    sy-subrc = gcs-insert_failed.
    Exit. "Выйти из подпрограммы после неудачного выполнения INSERT
  Endif.
  Call function 'ZPMP006_1_MODIFY'
    exporting
      iv_do_commit = gc_false
    importing
      o_num_of_processed = ls_num_of-modified
    changing
      ct_records = lt_mod_rows
    exceptions
      db_error = 1.
  If sy-subrc <> 0.
    Message e000(su)
      with 'Ошибка'
           sy-subrc
           'при вызове ZPMP006_1_MODIFY.'
           'Содержимое базы данных не изменено.'.
    Exit.
  Endif.

"Обновить журнал изменений
  Call function 'ZPMP006_3_INSERT_TO_LOG'
    exporting
      iv_do_commit = gc_false
      it_ins_rows = lt_ins_rows
      it_del_rows = lt_del_rows
      it_mod_rows_old = lt_mod_rows_old
      it_mod_rows_new = lt_mod_rows
    exceptions
      db_error = 1
      old_new_mismatch_by_key = 2.
  If sy-subrc <> 0.
    Message e000(su)
      with 'Ошибка'
           sy-subrc
           'при вызове ZPMP006_3_INSERT_TO_LOG.'
           'Содержимое базы данных не изменено.'.
    Exit.
  Endif.

"Подтвердить изменения, сделанные в таблицах ZPMP006_1 и ZPMP006_3
  Commit work and wait.

"Отчитаться
  Message i000(su)
    with 'Удалено/добавлено/изменено строк:'
         ls_num_of-deleted
         ls_num_of-inserted
         ls_num_of-modified.

"Обновить данные в гриде
  Refresh lt_data_source.
  Move lt_mod_rows to lt_data_source.
  If p_show_d = gc_false.
  "Не нужно обновлять данные в удалённых строках, если они не показываются
    Delete ot_data where alv_deleted = gc_true.
  Else.
    Append lines of lt_del_rows to lt_data_source.
  Endif.
  Loop at lt_data_source into ls_data_source.
    Read table ot_data
      into ls_data_destination
      with key unique_index = ls_data_source-unique_index.
    If sy-subrc <> 0.
      Message w000(su)
        with 'Не удалось обработать запись с индексом'
             ls_data_source-unique_index
             ', чтобы отобразить данные о последнем изменении'
             'на экране. Сообщите разработчикам по т. 6-04-42'.
      Continue. "Перейти к следующей записи в lt_data_source
    Endif.
  "Найдена запись, в которую нужно подтянуть сохранённые в таблице данные
    Move-corresponding ls_data_source to ls_data_destination.
    Modify ot_data from ls_data_destination index sy-tabix.
  Endloop.

"Запомнить содержимое до изменений, 3 из 3
  Move ot_data to ot_data_before.
Endform. "save_data

*&-------------------------------------------------------------------*
*&   Вычесть из множества записей в первой таблице множество записей из
*& второй таблицы и выдать множество-разность. Записи сравнивать по ключевым
*& полям (MANDT, UNIQUE_INDEX), не сравнивать содержимое остальных полей.
*&
*&  -> it_minuend = уменьшаемое множество
*&  -> it_subtrahend = вычитаемое множество
*& <-> ot_difference = множество-разность
*&-------------------------------------------------------------------*
Form subtract_set
  using
    it_minuend type ty_t_data "уменьшаемое множество
    it_subtrahend type ty_t_data "вычитаемое множество
  changing
    ot_difference type ty_t_data. "множество-разность

  Data:
    ls_subtrahend type ty_s_data.

  Move it_minuend to ot_difference.
  Loop at it_subtrahend into ls_subtrahend.
    Delete ot_difference
      where mandt = ls_subtrahend-mandt
        and unique_index = ls_subtrahend-unique_index.
  Endloop.
Endform. "subtract_set

*&-------------------------------------------------------------------*
*&   Выдать те строки из обеих входных таблиц, у которых ключевые поля
*& совпадают, а содержимое - не совпадает.
*&
*&  -> it_set_1 = первая входная таблица
*&  -> it_set_2 = вторая входная таблица
*& <-> ot_mod_rows_from_1 = искомые строки из первой входной таблицы
*& <-> ot_mod_rows_from_2 = искомые строки из второй входной таблицы
*&-------------------------------------------------------------------*
Form get_rows_with_mod_content
  using
    it_set_1 type ty_t_data
    it_set_2 type ty_t_data
  changing
    ot_mod_rows_from_1 type ty_t_data
    ot_mod_rows_from_2 type ty_t_data.

  Data:
    ls_1 type ty_s_data,
    ls_2 type ty_s_data, "#EC NEEDED смотри Read table it_set_2 ниже
    lt_intersection_1 type ty_t_data, "Пересечение по ключу, содержимое из 1й
    lt_intersection_2 type ty_t_data, "Пересечение по ключу, содержимое из 2й
    ls_intersection type ty_s_data.

  Refresh: ot_mod_rows_from_1, ot_mod_rows_from_2.

  Loop at it_set_1 into ls_1.
    Read table it_set_2
      with key
        mandt = ls_1-mandt
        unique_index = ls_1-unique_index
      into ls_2.
    If sy-subrc = 0. "Пересечение по ключу
      Append ls_1 to lt_intersection_1. "содержимое из первой таблицы
      Append ls_2 to lt_intersection_2. "содержимое из второй таблицы
    Endif.
  Endloop.

"Определены строки с совпадающими ключами из первой и второй входной таблицы

  Loop at lt_intersection_1 into ls_intersection.
    Read table it_set_2
      with key table_line = ls_intersection
      into ls_2.
    If sy-subrc <> 0. "Содержимое из 2й таблицы отличается от содержимого 1й
      Append ls_intersection to ot_mod_rows_from_1.
      Read table lt_intersection_2
        with key
          mandt = ls_intersection-mandt
          unique_index = ls_intersection-unique_index
        into ls_2.
      Append ls_2 to ot_mod_rows_from_2.
    Endif.
  Endloop.

Endform. "get_rows_with_mod_content

*&-------------------------------------------------------------------*
*&   Проверить корректность введённых в список данных.
*& Введённое местоположение — существует.
*& Введённая единица оборудования — имеет актуальное местоположение, которое
*& совпадает с местоположением в соседней ячейке той же строки списка.
*&
*&  -> ir_data_changed = атрибут mr_data_changed объекта класса cl_gui_alv_grid
*&-------------------------------------------------------------------*
Form alv_1_handle_data_changed
  using
    ir_data_changed type ref to cl_alv_changed_data_protocol.

  Data:
        lt_mod_cells type lvc_t_modi,
        ls_mod_cell type lvc_s_modi,
        lv_stort type ty_s_data-stort,
        lv_stort_is_ok type boolean,
        lv_equnr type ty_s_data-equnr,
        lv_equnr_is_ok type boolean.

"Проверить правильность введённого местоположения
  Move ir_data_changed->mt_mod_cells to lt_mod_cells.
  Sort lt_mod_cells by row_id.

  Loop at lt_mod_cells
    into ls_mod_cell
    where fieldname = gcs-data_table-stort.

    Call method ir_data_changed->get_cell_value
      exporting
        i_row_id    = ls_mod_cell-row_id
        i_fieldname = gcs-data_table-stort
      importing
        e_value     = lv_stort.

    Perform check_stort_is_ok using gcs-werks lv_stort changing lv_stort_is_ok.

    If lv_stort_is_ok <> gc_true.
      Call method ir_data_changed->add_protocol_entry
        exporting
          i_msgid = 'SU'
          i_msgno = '000'
          i_msgty = 'E'
          i_msgv1 = 'Местоположение'
          i_msgv2 = lv_stort
          i_msgv3 = 'не существует'
          i_fieldname = ls_mod_cell-fieldname
          i_row_id = ls_mod_cell-row_id.

    Endif.

  Endloop.

"Проверить правильность введённой единицы оборудования
  Loop at lt_mod_cells
    into ls_mod_cell
    where fieldname = gcs-data_table-equnr.

    Call method ir_data_changed->get_cell_value
      exporting
        i_row_id    = ls_mod_cell-row_id
        i_fieldname = gcs-data_table-stort
      importing
        e_value     = lv_stort.

    Call method ir_data_changed->get_cell_value
      exporting
        i_row_id    = ls_mod_cell-row_id
        i_fieldname = gcs-data_table-equnr
      importing
        e_value     = lv_equnr.

    Perform check_equnr_is_ok
      using lv_stort
            lv_equnr
      changing lv_equnr_is_ok
            .
    If lv_equnr_is_ok <> gc_true.
      Call method ir_data_changed->add_protocol_entry
        exporting
          i_msgid = 'SU'
          i_msgno = '000'
          i_msgty = 'E'
          i_msgv1 = 'Единица оборудования'
          i_msgv2 = lv_equnr
          i_msgv3 = 'не прошла проверку'
          i_fieldname = ls_mod_cell-fieldname
          i_row_id = ls_mod_cell-row_id.
    Endif.
  Endloop.

Endform. "alv_1_handle_data_changed

*&-------------------------------------------------------------------*
*&   Добавить свои кнопки на панель инструментов в ALV-гриде
*&-------------------------------------------------------------------*
Form alv_1_handle_toolbar
  using
    i_object type ref to cl_alv_event_toolbar_set.

  Data:
    ls_toolbar type stb_button.

  Clear ls_toolbar.
  ls_toolbar-butn_type = gcs-alv-toolbar-button_type-separator. "Разделитель
  Append ls_toolbar to i_object->mt_toolbar.

  If sy-dynnr = gcs-screens-data_change-number.
    Clear ls_toolbar.
    ls_toolbar-function = gcs-commands-alv-delete.
    ls_toolbar-butn_type = gcs-alv-toolbar-button_type-normal. "Обычная кнопка
    ls_toolbar-icon = gcs-icon_delete.
    ls_toolbar-text = 'Удалить'.
    ls_toolbar-quickinfo = 'Удалить выбранные строки'.
    Append ls_toolbar to i_object->mt_toolbar.

    Clear ls_toolbar.
    ls_toolbar-function = gcs-commands-alv-undelete.
    ls_toolbar-butn_type = gcs-alv-toolbar-button_type-normal. "Обычная кнопка
    ls_toolbar-icon = gcs-icon_undelete.
    ls_toolbar-text = 'Отменить удаление'.
    ls_toolbar-quickinfo = 'Отменить для выбранных строк'.
    Append ls_toolbar to i_object->mt_toolbar.
  Endif.

  If sy-dynnr = gcs-screens-data_change-number or
     sy-dynnr = gcs-screens-data_view-number.
    Clear ls_toolbar.
    ls_toolbar-function = gcs-commands-alv-excel.
    ls_toolbar-butn_type = gcs-alv-toolbar-button_type-normal. "Обычная кнопка
    ls_toolbar-icon = gcs-icon_excel.
    ls_toolbar-text = 'Выгрузить в Excel'.
    ls_toolbar-quickinfo = 'Выгрузить таблицу в файл Excel'.
    Append ls_toolbar to i_object->mt_toolbar.
    Clear ls_toolbar.
    ls_toolbar-function = gcs-commands-alv-show_log.
    ls_toolbar-butn_type = gcs-alv-toolbar-button_type-normal. "Обычная кнопка
    ls_toolbar-icon = gcs-icon_log.
    ls_toolbar-text = 'Журнал изменений'.
    ls_toolbar-quickinfo = 'Показать журнал изменений'.
    Append ls_toolbar to i_object->mt_toolbar.
  Endif.

Endform. "alv_1_handle_toolbar

*&-------------------------------------------------------------------*
*&   Обработать нажатие на свои кнопки, добавленные на панель инструментов
*&-------------------------------------------------------------------*
Form alv_1_handle_user_command
  using
    ir_alv type ref to cl_gui_alv_grid
    i_ucomm type sy-ucomm.

  Data:
    lv_row_count type i, "Кол-во строк, для которых был обработан флаг удаления
    lv_message type string.

  Case i_ucomm.

    When gcs-commands-alv-delete.
      Perform set_unset_deletion_flag
        using gc_true
              ir_alv
        changing gt_data
                 lv_row_count
              .
      If lv_row_count = -1.
        Message s000(su)
          with 'Выберите строки кнопками слева'.
      Else.
        Message s000(su)
          with 'Строк помечено на удаление:'
               lv_row_count
               'шт.'.
      Endif.

    When gcs-commands-alv-undelete.
      Perform set_unset_deletion_flag
        using gc_false
              ir_alv
        changing gt_data
                 lv_row_count
              .
      If lv_row_count = -1.
        Message s000(su)
          with 'Выберите строки кнопками слева'.
      Else.
        Message s000(su)
          with 'Удаление отменено для'
               lv_row_count
               'шт. строк'.
      Endif.

    When gcs-commands-alv-excel.
      Perform export_to_excel
        using gt_data
              .

    When gcs-commands-alv-show_log.
      Perform show_log
        using ir_alv
              gt_data
        changing gt_log_data
                 lv_row_count
                 gs_alv
              .
      Case lv_row_count.
        When -1.
          Message s000(su)
            with 'Выберите строку кнопкой слева'.
        When 0.
          Message s000(su)
            with 'Не найдены данные в журнале изменений'.
        When others.
          Message s000(su)
            with 'Найдено строк в журнале изменений:'
                 lv_row_count
                 'шт.'.
      Endcase.

    When others.
      Message i000(su)
        with 'Команда'
             i_ucomm
             'пока не обрабатывается'.
  Endcase.

Endform. "alv_1_handle_user_command

*&-------------------------------------------------------------------*
*&   Поставить/снять в выделенных строках метку удаления
*&
*&  -> iv_set_deletion = флаг, если 'X' — то во всех выделенных строках ставить
*&                       метку удаления, иначе — снимать метку
*&
*&  -> ir_alv = ссылка на грид, в котором выделены строки
*& <-> ot_data = таблица, привязанная к гриду
*& <-> ov_row_count = количество строк, у которых был переключен флаг
*&     Если -1, то в гриде не было выделенных строк
*&-------------------------------------------------------------------*
Form set_unset_deletion_flag
  using
    iv_set_deletion type boolean
    ir_alv type ref to cl_gui_alv_grid
  changing
    ot_data type ty_t_data
    ov_row_count type i.

  Data:
    lt_selected_rows type lvc_t_roid,
    ls_selected_row type lvc_s_roid,
    lv_alv_deleted type ty_s_data-alv_deleted,
    lv_alv_row_color type ty_s_data-alv_row_color,
    ls_data type ty_s_data.

  Clear ov_row_count.

  Call method ir_alv->get_selected_rows
    importing
      et_row_no = lt_selected_rows.

  If lt_selected_rows is initial.
    ov_row_count = -1.
    Exit.
  Endif.

  If iv_set_deletion = gc_true.
    lv_alv_deleted = gc_true.
    lv_alv_row_color = gcs-alv-color-lightred.
  Else.
    Clear lv_alv_deleted.
    lv_alv_row_color = gcs-alv-color-default.
  Endif.

  Loop at lt_selected_rows into ls_selected_row.
    Read table ot_data into ls_data index ls_selected_row-row_id.
    If ls_data-alv_deleted <> lv_alv_deleted.
      Add 1 to ov_row_count.
    Endif.
    ls_data-alv_deleted = lv_alv_deleted.
    ls_data-alv_row_color = lv_alv_row_color.
    Modify ot_data from ls_data index ls_selected_row-row_id.
  Endloop.

"Обновить грид, сохраняя горизонтальную/вертикальную позиции прокрутки
  Call method ir_alv->refresh_table_display
    exporting
      is_stable = gcs-alv-stable_refresh.

Endform. "set_unset_deletion_flag

*&-------------------------------------------------------------------*
*&   Проверить существование местоположения
*&-------------------------------------------------------------------*
Form check_stort_is_ok
  using
    iv_werks type T499S-WERKS
    iv_stort type T499S-STAND
  changing
    ov_is_ok type boolean.

  Data:
    lv_stort like iv_stort.

  Select single STAND
    into lv_stort
    from T499S
    where WERKS = iv_werks
      and STAND = iv_stort
         .
  If sy-subrc = 0.
    ov_is_ok = gc_true.
  Else.
    ov_is_ok = gc_false.
  Endif.
Endform. "check_stort_is_ok

*&-------------------------------------------------------------------*
*&   Проверить соответствие между местоположением и единицей оборудования:
*& актуальное местоположение единицы должно совпадать с проверочным.
*&-------------------------------------------------------------------*
Form check_equnr_is_ok
  using
    iv_stort type T499S-STAND "проверочное местоположение
    iv_equnr type EQUI-EQUNR "проверяемая единица оборудования
  changing
    ov_is_ok type boolean.

  Data:
    lv_max_eqlfn type ZPMP006_2-EQLFN,
    lv_stort like iv_stort.

"Выбрать актуальное (последнее) местоположение у ЕО
  Select max( EQLFN )
    into lv_max_eqlfn "если в один день было несколько записей, взять последнюю
    from ZPMP006_2
    where EQUNR = iv_equnr
         .
  Select single STORT "#EC * Ключ. полей хватает (в ракурсе DATBI = '9991231')
    into lv_stort
    from ZPMP006_2
    where EQUNR = iv_equnr and
          EQLFN = lv_max_eqlfn
         .
  If sy-subrc = 0 and
     lv_stort = iv_stort.
  "Актуальное местоположение в единице оборудования совпадает с проверочным
    ov_is_ok = gc_true.
  Else.
    ov_is_ok = gc_false.
  Endif.
Endform. "check_equnr_is_ok

*&-------------------------------------------------------------------*
*&   Обработать двойной щелчок по полю
*&-------------------------------------------------------------------*
Form alv_1_handle_double_click
  using
    is_column type lvc_s_col
    is_row_no type lvc_s_roid
    it_data type ty_t_data.

  Data: ls_data type ty_s_data.

  Read table it_data into ls_data index is_row_no-row_id.
  If sy-subrc = 0 and
     is_column-fieldname = gcs-data_table-equnr and
     ls_data-equnr is not initial.
  "Проверить существование ЕО (Call trans... and skip... не изменяет sy-subrc)
    Select single equnr
      from EQUI
      into ls_data-equnr
      where EQUNR = ls_data-equnr
           .
    If sy-subrc <> 0.
      Message s000(su)
        with 'Единица оборудования'
             ls_data-equnr
             'не найдена'
        display like 'E'.
      Exit.
    Endif.
  "Единица оборудования существует, вызвать транзакцию просмотра
    Set parameter id gcs-transactions-equip_view-parid field ls_data-equnr.
    Call transaction gcs-transactions-equip_view-tcode and skip first screen.
  Endif.
Endform. "alv_1_handle_double_click

*&-------------------------------------------------------------------*
*&   Обработать щелчок по "горячему" полю аналогично двойному щелчку
*&-------------------------------------------------------------------*
Form alv_1_handle_hotspot_click
  using
    is_column type lvc_s_col
    is_row_no type lvc_s_roid
    it_data type ty_t_data.

  Perform alv_1_handle_double_click
    using is_column
          is_row_no
          it_data
          .
Endform. "alv_1_handle_hotspot_click

*&-------------------------------------------------------------------*
*&   Показать свою помощь по вводу (клавиша F4) для местоположения (STORT)
*& с ограничениями
*&-------------------------------------------------------------------*
Form alv_1_show_f4_stort
  using
    is_row_no type lvc_s_roid
    ir_event_data type ref to cl_alv_event_data
    it_restriction_strings type ty_t_strings.

  Types:
    begin of ty_s_restriction,
      stand type T499S-STAND,
    end of ty_s_restriction,
    ty_t_restrictions type standard table of ty_s_restriction.

  Constants:
  "Источник данных для помощи по вводу
    lc_tabname type tabname value 'T499S', "Изменил? Ищи from T499S, of T499S
    lc_field_1 type fieldname value 'STAND', "Поле со значением местоположения
    lc_field_2 type fieldname value 'KTEXT'. "Поле с поясняющим текстом

  Data:
    ls_restriction_string type ty_s_string,
    lt_restrictions type ty_t_restrictions,
    ls_restriction type ty_s_restriction,
    lt_data_source type table of T499S,
    ls_data_source like line of lt_data_source,
    ls_value type seahlpres,
    lt_values type table of seahlpres,
    ls_field  type dfies,
    lt_fields type table of dfies,
    lt_selected_sh_rows type standard table of ddshretval,
    ls_selected_sh_row type ddshretval,
    ls_modi type lvc_s_modi.

  Field-symbols:
    <ft_modi> type lvc_t_modi.

"Отказаться от стандартной помощи по вводу
  ir_event_data->m_event_handled = gc_true.

"Выбрать данные для помощи по вводу с учётом ограничений
  Loop at it_restriction_strings into ls_restriction_string.
    ls_restriction-stand = ls_restriction_string-string.
    Append ls_restriction to lt_restrictions.
  Endloop.
  Select *
    into table lt_data_source
    from T499S
    for all entries in lt_restrictions "Если нет ограничений — выбрать всё
      where STAND = lt_restrictions-stand.

"Перевести выбранные данные в формат "ячейка-за-ячейкой" (cell-by-cell)
  Loop at lt_data_source into ls_data_source.
    ls_value-string = ls_data_source-stand.
    Append ls_value to lt_values.
    ls_value-string = ls_data_source-ktext.
    Append ls_value to lt_values.
  Endloop.

"Задать набор столбцов для отображения выбранных данных
  ls_field-tabname   = lc_tabname.
  ls_field-fieldname = lc_field_1.
  Append ls_field to lt_fields.

  ls_field-tabname   = lc_tabname.
  ls_field-fieldname = lc_field_2.
  Append ls_field to lt_fields.

"Показать помощь по вводу во всплывающем окне
  Call function 'F4IF_INT_TABLE_VALUE_REQUEST'
    exporting
      retfield               = lc_field_1
      multiple_choice        = gc_false
      display                = gc_false
    tables
      value_tab              = lt_values
      field_tab              = lt_fields
      return_tab             = lt_selected_sh_rows
    exceptions
      parameter_error        = 1
      no_values_found        = 2
      others                 = 3
            .
  If sy-subrc <> 0.
  "Ошибка, показать сообщение и выйти
    Message id sy-msgid
      type sy-msgty
      number sy-msgno
      with sy-msgv1
           sy-msgv2
           sy-msgv3
           sy-msgv4.
    Exit.
  Endif.

"Передать выбранное значение в ALV-грид
  Read table lt_selected_sh_rows into ls_selected_sh_row index 1.
  If sy-subrc <> 0.
  "Нет ни одной выбранной строки, выйти из подпрограммы
    Exit.
  Endif.
  ls_modi-value = ls_selected_sh_row-fieldval.
  ls_modi-fieldname = gcs-data_table-stort. "В поле "Местоположение"
  ls_modi-row_id = is_row_no-row_id.
  Assign ir_event_data->m_data->* to <ft_modi>.
  Append ls_modi to <ft_modi>. "Добавить к изменённым ячейкам ALV-грида
  Unassign <ft_modi>.

Endform. "alv_1_show_f4_stort

*&-------------------------------------------------------------------*
*&   Показать свою помощь по вводу (клавиша F4) для единицы оборудования (ЕО,
*& EQUNR) с учётом уже введённых данных в поля столбцов "Местоположение",
*& "Тип/модель", "Наименование", "Серийный номер".
*&-------------------------------------------------------------------*
Form alv_1_show_f4_equnr
  using
    is_data_row type ty_s_data
    is_row_no type lvc_s_roid
    ir_event_data type ref to cl_alv_event_data.

  Constants:
  "Источник данных для помощи по вводу
    lc_shlpname type shlpname value 'ZPMP006_1'.

  Data:
    ls_shlp type shlp_descr,
    ls_interface type ddshiface,
    ls_selopt type ddshselopt,
    lv_rc type sy-subrc,
    lt_selected_sh_rows type standard table of ddshretval,
    ls_selected_sh_row type ddshretval,
    ls_modi type lvc_s_modi.

  Field-symbols:
    <ft_modi> type lvc_t_modi.

"Отказаться от стандартной помощи по вводу
  ir_event_data->m_event_handled = gc_true.

"Получить описание средства поиска СП
  Call function 'F4IF_GET_SHLP_DESCR'
       exporting
            shlpname = lc_shlpname
       importing
            shlp     = ls_shlp.

"Дополнить описание СП: задать возвращаемые из СП поля
  Loop at ls_shlp-interface into ls_interface
    where shlpfield <> gcs-data_table-stort.
    "Все, кроме поля "Местоположение
      ls_interface-valfield = ls_interface-shlpfield.
      Modify ls_shlp-interface from ls_interface index sy-tabix.
  Endloop.

"Дополнить описание СП: ввести начальные ограничения в ls_shlp-selopt
  ls_selopt-shlpname = lc_shlpname.
  ls_selopt-sign = gcs-so-sign-include.
  ls_selopt-option = gcs-so-option-equals.
  If is_data_row-stort is not initial. "Местоположение
    ls_selopt-shlpfield = gcs-data_table-stort.
    ls_selopt-low = is_data_row-stort.
    Append ls_selopt to ls_shlp-selopt.
  Endif.

  If is_data_row-type is not initial. "Тип/модель
    ls_selopt-shlpfield = gcs-data_table-type.
    ls_selopt-option = gcs-so-option-contains_pattern.
    Concatenate gc_asterisk
                is_data_row-type
                gc_asterisk
      into ls_selopt-low.
    Append ls_selopt to ls_shlp-selopt.
  Endif.

  If is_data_row-serge is not initial. "Серийный номер
    ls_selopt-shlpfield = gcs-data_table-serge.
    ls_selopt-option = gcs-so-option-contains_pattern.
    Concatenate gc_asterisk
                is_data_row-serge
                gc_asterisk
      into ls_selopt-low.
    Append ls_selopt to ls_shlp-selopt.
  Endif.

  If is_data_row-equipment_name is not initial. "Наименование
    ls_selopt-shlpfield = gcs-data_table-equipment_name.
    ls_selopt-option = gcs-so-option-contains_pattern.
    Concatenate gc_asterisk
                is_data_row-equipment_name
                gc_asterisk
      into ls_selopt-low.
    Append ls_selopt to ls_shlp-selopt.
  Endif.


"Вызвать дополненную помощь по вводу (с заданными начальными ограничениями)
  Call function 'F4IF_START_VALUE_REQUEST'
       exporting
            shlp          = ls_shlp
       importing
            rc            = lv_rc
       tables
            return_values = lt_selected_sh_rows.

  Case lv_rc.
    When 0.
    "Выбранное значение находится в таблице lt_selected_sh_rows
    When 4.
      Message s000(su)
        with 'Значения не найдены'.
      Exit.
    When 8.
      Message s000(su)
        with 'Ничего не выбрано'.
      Exit.
    When others.
      Message s000(su)
        with 'Ошибка номер'
             lv_rc
             'при вызове ФМ F4IF_START_VALUE_REQUEST,'
             'сообщите разработчикам'
        display like 'E'.
      Exit. "Выйти из подпрограммы
  Endcase.

"Передать поля выбранной строки из СП в ALV-грид
  Assign ir_event_data->m_data->* to <ft_modi>.
  Loop at lt_selected_sh_rows into ls_selected_sh_row.
    ls_modi-value = ls_selected_sh_row-fieldval.
    ls_modi-fieldname = ls_selected_sh_row-fieldname.
    ls_modi-row_id = is_row_no-row_id.
    Append ls_modi to <ft_modi>. "Добавить поле к изменённым ячейкам ALV-грида
  Endloop.
  Unassign <ft_modi>.

Endform. "alv_1_show_f4_equnr

*&-------------------------------------------------------------------*
*& Выгрузка в Excel через www-шаблон ZPMT006
*&-------------------------------------------------------------------*
Form export_to_excel using it_data like gt_data.

  Data:
    ls_data like line of it_data.

  Types: "Для вывода в Excel
    ty_s_excel type ZWWW_VALUES,
    ty_t_excel type standard table of ty_s_excel,
    begin of ty_s_excel_row,
      col00 type i,
      col01 like ls_data-equipment_name,
      col02 like ls_data-type,
      col03 type c length 97, "1+48x2 (manufact. name & place)
      col04 like ls_data-project,
      col05 like ls_data-date_start,
      col06 like ls_data-software_name,
      col07 like ls_data-version_original,
      col08 like ls_data-version_mod,
      col09 like ls_data-dev_environment,
      col10 like ls_data-mod_cause,
      col11 like ls_data-mod_worker,
      col12 like ls_data-mod_date,
      col13 like ls_data-num_of_copies,
      col14 like ls_data-commentary,
    end of ty_s_excel_row.

  Constants: "Для вывода в Excel
    lc_file_name type RLGRAP-FILENAME value 'Перечень ПО АСУТП.xls',"#EC NOTEXT
    lc_template_name type WWWDATATAB-OBJID value 'ZPMT006', "смотри транз. SMW0
    lc_list_name type ZWWW_VALUES-var_name value 'List_1',
    lc_delete_name type ZWWW_VALUES-var_name value 'delete_it',

    begin of lc_t1,
      begin of row1, "row 1 = строка типа 1
        name  type ZWWW_VALUES-var_name value 'T1_R',
        colxx_mask type ZWWW_VALUES-var_name value '[*]',
      end of row1,
    end of lc_t1.

  Data: "Для вывода в Excel
    lv_file_name type RLGRAP-FILENAME value lc_file_name,
    lv_file_path like lv_file_name,
    lt_excel type ty_t_excel, "список команд для заполнения шаблона
    ls_excel type ty_s_excel, "отдельная команда для заполнения шаблона
    lv_workarea_name like lc_list_name, "Название рабочей области (строка в шаблоне)
    lv_row_num type ZWWW_VALUES-var_num, "Номер строки, вставляемой в рабочую область
    ls_t1_row type ty_s_excel_row,
    lv_col_num type n length 2,
    lv_col_text type ZWWW_VALUES-find_text.

  Field-symbols:
    <fv_col_xx> type any. "Содержимое ячейки XX для вставки в столбец XX

"Сформировать название диапазона, куда будут вставляться строки
  "В строку типа 1 первой таблицы
  Concatenate lc_list_name
              lc_t1-row1-name
    into lv_workarea_name
    separated by '!'.

"Сформировать имя файла, в который будут выгружаться данные
  Call function 'TMP_GUI_GET_TEMPPATH'
    importing
      temppath       = lv_file_path
    exceptions
      failed         = 1
      others         = 2
            .
  If sy-subrc <> 0.
    Clear lv_file_name. "Название будет задано ФМ ZWWW_OPENFORM
  Else.
    Concatenate lv_file_path
                lc_file_name
      into lv_file_name
      separated by '/'.
  Endif.

"Добавить в список команд вставку данных
  Loop at it_data into ls_data.
  "Подготовить строку с данными
    Add 1 to lv_row_num. "Номер строки
    ls_t1_row-col00 = lv_row_num. "Первый столбец таблицы 1 = номер строки
    ls_t1_row-col01 = ls_data-equipment_name.
    ls_t1_row-col02 = ls_data-type.
    Concatenate ls_data-manufact_name
                ls_data-manufact_place
      into ls_t1_row-col03
      separated by space.
    ls_t1_row-col04 = ls_data-project.
    ls_t1_row-col05 = ls_data-date_start.
    ls_t1_row-col06 = ls_data-software_name.
    ls_t1_row-col07 = ls_data-version_original.
    ls_t1_row-col08 = ls_data-version_mod.
    ls_t1_row-col09 = ls_data-dev_environment.
    ls_t1_row-col10 = ls_data-mod_cause.
    ls_t1_row-col11 = ls_data-mod_worker.
    ls_t1_row-col12 = ls_data-mod_date.
    ls_t1_row-col13 = ls_data-num_of_copies.
    ls_t1_row-col14 = ls_data-commentary.

  "Вставить ячейки из подготовленной строки с данными
    Do 15 times. "Пройти по всем ячейкам строки
    "Задать столбец в шаблоне Excel ([01], .. [14])
      lv_col_num = sy-index - 1. "От 00 до 14
      lv_col_text = lc_t1-row1-colxx_mask.
      Replace '*' in lv_col_text with lv_col_num.
    "Взять значение из нужной ячейки подготовленной строки ls_t1_row
      Assign component sy-index of structure ls_t1_row to <fv_col_xx>.
    "Заполнить ячейку заданного столбца — вставить команду в список команд
      ls_excel-var_name = lv_workarea_name.
      ls_excel-var_num  = lv_row_num.
      ls_excel-find_text = lv_col_text.
      ls_excel-value = <fv_col_xx>.
      Append ls_excel to lt_excel.

      Unassign <fv_col_xx>.
    Enddo.
  Endloop.

"Добавить в список команд удаление строки, оставленной в шаблоне
  Clear ls_excel.
  ls_excel-var_name = lc_delete_name.
  ls_excel-val_type = 'D'.
  Append ls_excel to lt_excel.

"Вызвать функциональный модуль — выгрузка в Excel
  Call function 'ZWWW_OPENFORM'
    exporting
      FORM_NAME               = lc_template_name
      FILE_NAME               = lv_file_name
      PRINTDIALOG             = space
      PROTECT                 = space
*     OPTIMIZE                = 100
*     DEBUG_MODE              = 'X'
*     DECIMAL_SEPARATOR       = '.'
*     CLOSE_FORM              = ''
*     DELETE_FILE             = 'X'
    tables
      IT_VALUES               = lt_excel
    exceptions
      printcancel             = 1
      others                  = 2
            .
  If sy-subrc <> 0.
    Message id sy-msgid
      type sy-msgty
      number sy-msgno
      with sy-msgv1
           sy-msgv2
           sy-msgv3
           sy-msgv4.
  Endif.

Endform. "export_to_excel

*&-------------------------------------------------------------------*
*&   Подготовить набор объектов, необходимый для отображения ALV-грида с логом.
*& Структура грида заполняется из таблицы ZPMP006_3, которая задана через
*& глобальную константу gcs_log_table-table_name.
*&
*&  -> iv_dynnr = номер экрана, для которого подготавливается ALV-грид
*& <-> ot_fieldcat = структура грида (список столбцов ALV)
*& <-> ot_sort = правила сортировки
*& <-> ot_excl = список кнопок, убираемых с панели инструментов ALV-грида
*& <-> os_layout = общие настройки внешнего вида
*&-------------------------------------------------------------------*
Form alv_2_prepare
  using
    iv_dynnr type sy-dynnr
  changing
    ot_fieldcat type lvc_t_fcat
    ot_sort type lvc_t_sort
    ot_excl type ui_functions
    os_layout type lvc_s_layo.

  Data:
    ls_fcat type lvc_s_fcat,
    ls_sort type lvc_s_sort,
    ls_excl type ui_func.

"Field catalog
  Call function 'LVC_FIELDCATALOG_MERGE'
    exporting
      i_structure_name             = gcs_log_table-table_name
    changing
      ct_fieldcat                  = ot_fieldcat
    exceptions
      others                       = 1
            .
  If sy-subrc <> 0.
    Message e000(SU)
      with 'Ошибка при заполнении fieldcat для ALV на экране'
           iv_dynnr
           'из таблицы'
           gcs_log_table-table_name.
    Exit.
  Endif.

  Loop at ot_fieldcat into ls_fcat.
  "Обработать все столбцы
    If ls_fcat-fieldname = gcs_log_table-key_mandt or
       ls_fcat-fieldname = gcs_log_table-key_unique_index or
       ls_fcat-fieldname = gcs_log_table-key_field_name.
    "Скрыть столбцы
      ls_fcat-no_out = gc_true.
    Endif.
    If ls_fcat-fieldname = gcs_log_table-key_change_name or
       ls_fcat-fieldname = gcs_log_table-field_label.
    "Отменить в столбцах объединение ячеек с одинак. значениями по вертикали
      ls_fcat-no_merging = gc_true.
    Endif.
    Modify ot_fieldcat from ls_fcat index sy-tabix.
  Endloop.

"Sort
  ls_sort-spos = 1.
  ls_sort-fieldname = gcs_log_table-key_change_date.
  ls_sort-down = gc_true.
  ls_sort-up = gc_false.
  Append ls_sort to ot_sort.

  ls_sort-spos = 2.
  ls_sort-fieldname = gcs_log_table-key_change_time.
  ls_sort-down = gc_true.
  ls_sort-up = gc_false.
  Append ls_sort to ot_sort.

  ls_sort-spos = 3.
  ls_sort-fieldname = gcs_log_table-field_label.
  ls_sort-down = gc_false.
  ls_sort-up = gc_true.
  Append ls_sort to ot_sort.

"Убрать кнопки
  ls_excl = cl_gui_alv_grid=>mc_mb_sum. "Кнопки "Суммы", "Подсуммы"
  Append ls_excl to ot_excl.

  ls_excl = cl_gui_alv_grid=>mc_fc_graph. "Кнопка "Графика"
  Append ls_excl to ot_excl.

  ls_excl = cl_gui_alv_grid=>mc_mb_variant. "Кнопки "Формат" — внешний вид
  Append ls_excl to ot_excl.

"Layout
  os_layout-edit = gc_false.
  os_layout-cwidth_opt = gc_true.
  os_layout-sel_mode = gcs-alv-sel_mode-d.
  os_layout-info_fname = gcs_log_table-alv_row_color.

Endform. "alv_2_prepare

*&-------------------------------------------------------------------*
*&   Показать/обновить грид типа 2 в контейнере класса cl_gui_dialogbox_cont.
*& Данные для грида — в ot_data.
*& Структура и внешний вид грида задаются подпрограммой alv_2_prepare
*& из таблицы ZPMP006_3, которая задана через глобальную константу
*& gcs_log_table-table_name.
*&
*&  -> iv_dynnr = номер экрана, на котором будет отображён ALV-грид
*& <-> ot_data = внутренняя таблица с данными из таблицы ZPMP006_3
*& <-> os_alv = набор объектов, необходимый для отображения ALV-грида
*&
*&-------------------------------------------------------------------*
Form alv_2_display
  using
    iv_dynnr type sy-dynnr
  changing
    ot_data type ty_t_log
    os_alv type ty_s_alv-log.

  If os_alv-r_grid is initial.
    Create object os_alv-r_cont
      exporting
        width         = 792
        height        = 216
        repid         = sy-repid
        dynnr         = sy-dynnr
        top           = 100
        left          = 200
        caption       = 'Журнал изменений'
      exceptions
        others        = 1
        .
    If sy-subrc <> 0.
      Message e000(SU)
        with 'Не удалось создать экземпляр'
             'dialogbox-контейнера на экране'
             iv_dynnr.
      Exit.
    Endif.

    Create object os_alv-r_handler.
    Set handler os_alv-r_handler->on_dialogbox_close for os_alv-r_cont.

    Create object os_alv-r_grid
      exporting
        i_parent          = os_alv-r_cont
      exceptions
        others            = 1
        .
    If sy-subrc <> 0.
      Message e000(SU)
        with 'Не удалось создать экземпляр ALV-Grid''а'
             'на экране'
             iv_dynnr.
      Exit.
    Endif.

    Perform alv_2_prepare
      using
        iv_dynnr
      changing
        os_alv-t_fcat
        os_alv-t_sort
        os_alv-t_excl
        os_alv-s_layo
            .

    Call method os_alv-r_grid->set_table_for_first_display
      exporting
        is_layout                     = os_alv-s_layo
        it_toolbar_excluding          = os_alv-t_excl
      changing
        it_outtab                     = ot_data
        it_fieldcatalog               = os_alv-t_fcat
        it_sort                       = os_alv-t_sort
      exceptions
        others                        = 1
            .
    If sy-subrc <> 0.
      Message e000(SU)
        with 'Исключ. ситуация при вызове метода'
             'os_alv-r_grid->set_table_for_first_display'
             'на экране'
             iv_dynnr.
      Exit.
    Endif.

  Else.
  "Обновить грид, сохраняя горизонтальную/вертикальную позиции прокрутки
    Call method os_alv-r_grid->refresh_table_display
      exporting
        is_stable = gcs-alv-stable_refresh.
  Endif.
Endform. "alv_2_display

*&-------------------------------------------------------------------*
*&   Показать журнал изменений для выделенной строки
*&
*&  -> ir_alv = ссылка на грид, в котором выделена строка
*&  -> it_data = таблица, привязанная к гриду с данными о ПО
*& <-> ot_log_data = таблица с данными журнала изменений
*& <-> ov_row_count = количество строк в журнале, -1 если строки не выделены
*& <-> os_alv = структура типа ty_s_alv, в ней изменяется ветка log
*&-------------------------------------------------------------------*
Form show_log
  using
    ir_alv type ref to cl_gui_alv_grid
    it_data type ty_t_data
  changing
    ot_log_data type ty_t_log
    ov_row_count type i
    os_alv type ty_s_alv.

  Data:
    lt_selected_rows type lvc_t_roid,
    ls_selected_row type lvc_s_roid,
    ls_data type ty_s_data.

  Clear ov_row_count.

  Call method ir_alv->get_selected_rows
    importing
      et_row_no = lt_selected_rows.

  If lt_selected_rows is initial.
    ov_row_count = -1.
    Exit.
  Endif.

"Выбрать данные из журнала для первой выделенной строки
  Read table lt_selected_rows into ls_selected_row index 1.
  Read table it_data into ls_data index ls_selected_row-row_id.
  Perform get_log_data
    using ls_data
    changing ot_log_data
             ov_row_count
          .
  If ov_row_count is initial.
    Exit.
  Endif.

"Показать выбранные данные
  Perform alv_2_display
    using gcs-screens-log-number
    changing ot_log_data
             os_alv-log
          .
Endform. "show_log

*&-------------------------------------------------------------------*
*&   Заполнить внутреннюю таблицу данными из таблицы с журналом изменений
*&
*&  -> is_query = структура с заполненными полями, ограничивающими выбор из БД
*& <-> ot_data = внутренняя таблица (источник задан константой — ZPMP006_3)
*& <-> ov_count = количество строк, выбранных из БД во внутреннюю таблицу
*&-------------------------------------------------------------------*
Form get_log_data
  using
    is_query type ty_s_data
  changing
    ot_data type ty_t_log
    ov_count type i.

"Select перезаписывает таблицу ot_data
  Select *
    from ZPMP006_3
    into corresponding fields of table ot_data
    where UNIQUE_INDEX = is_query-unique_index.
  ov_count = sy-dbcnt.

Endform. "get_log_data

*&-------------------------------------------------------------------*
*&   Заполнить внутреннюю таблицу данными из ракурса о пользователях программы
*&
*&  -> iv_show_all = показывать все операции
*& <-> ot_data = внутренняя таблица (источник задан константой — ZPMP006_4)
*& <-> ov_count = количество строк, выбранных из БД во внутреннюю таблицу
*&-------------------------------------------------------------------*
Form get_user_data
  using
    iv_show_all type boolean
  changing
    ot_data type ty_t_users
    ov_count type i.

"Select перезаписывает таблицу ot_data
  Select *
    from ZPMP006_4
    into corresponding fields of table ot_data.
  If iv_show_all <> gc_true.
    Delete ot_data
      where operation = 'CREATE' or
            operation = 'ALL'.
  Endif.
  Describe table ot_data lines ov_count.

Endform. "get_user_data

*&-------------------------------------------------------------------*
*&   Подготовить набор объектов, необходимый для отображения ALV-грида типа 3,
*& со списком уполномоченных. Структура грида заполняется из таблицы ZPMP006_4,
*& которая задана через глобальную константу gcs_user_table-table_name.
*&
*&  -> iv_dynnr = номер экрана, для которого подготавливается ALV-грид
*&  -> iv_view_full = просмотр без упрощения внешнего вида
*& <-> ot_fieldcat = структура грида (список столбцов ALV)
*& <-> ot_sort = правила сортировки
*& <-> ot_excl = список кнопок, убираемых с панели инструментов ALV-грида
*& <-> os_layout = общие настройки внешнего вида
*&-------------------------------------------------------------------*
Form alv_3_prepare
  using
    iv_dynnr type sy-dynnr
    iv_view_full type boolean
  changing
    ot_fieldcat type lvc_t_fcat
    ot_sort type lvc_t_sort
    ot_excl type ui_functions
    os_layout type lvc_s_layo.

  Data:
    ls_fcat type lvc_s_fcat,
    ls_sort type lvc_s_sort,
    ls_excl type ui_func,
    lv_col_number type i. "Номер столбца в списке gcs_user_table-col_set-full

  Field-symbols:
    <lf_fieldname> type LVC_FNAME.

"Field catalog
  "Получить список столбцов для ALV из словаря данных
  Call function 'LVC_FIELDCATALOG_MERGE'
    exporting
      i_structure_name             = gcs_user_table-table_name
    changing
      ct_fieldcat                  = ot_fieldcat
    exceptions
      others                       = 1
            .
  If sy-subrc <> 0.
    Message e000(SU)
      with 'Ошибка при заполнении fieldcat для ALV на экране'
           iv_dynnr
           'из таблицы'
           gcs_user_table-table_name.
    Exit.
  Endif.

"Оставить в гриде только те столбцы, что есть в списке для отображения.
"Различать полный/сокращённый список столбцов: col_set-full/col_set-reduced.
  Loop at ot_fieldcat into ls_fcat.
  "Искать очередной столбец из списка ст. ALV в списке столбцов для отображения
    lv_col_number = 0.
    Do.
      If iv_view_full = gc_true.
        Assign component sy-index
          of structure gcs_user_table-col_set-full
          to <lf_fieldname>.
      Else.
        Assign component sy-index
          of structure gcs_user_table-col_set-reduced
          to <lf_fieldname>.
      Endif.
      If sy-subrc <> 0.
        Exit. "Список столбцов закончился, выйти из цикла Do...Enddo.
      Endif.
      If ls_fcat-fieldname = <lf_fieldname>.
      "Текущий столбец ls_fcat-fieldname найден в списке для отображения
        lv_col_number = sy-index.
        Exit. "Прекратить поиск — выйти из цикла Do...Enddo.
      Endif.
    Enddo.
    If lv_col_number = 0.
    "Текущий столбец ls_fcat-fieldname не найден в списке для отображения
      Delete ot_fieldcat index sy-tabix. "Удалить столбец
      Continue. "Перейти к следующему столбцу в списке столбцов ALV
    Endif.
  "Показывать текущий столбец ls_fcat-fieldname из списка столбцов ALV
    ls_fcat-no_out = gc_false.
  "Присвоить порядковый номер
    ls_fcat-col_pos = lv_col_number.
  "Сохранить изменения, сделанные в списке столбцов ALV
    Modify ot_fieldcat from ls_fcat index sy-tabix.
  Endloop.

"Задать вручную заголовок, который не подтягивается из словаря данных
  Read table ot_fieldcat
    into ls_fcat
    with key fieldname = gcs_user_table-col_set-full-change_date.
  If sy-subrc = 0.
    ls_fcat-coltext = 'Дата последнего изменения'.
    Modify ot_fieldcat from ls_fcat index sy-tabix.
  Endif.

"Скрыть столбец "Фамилия" (нужен для сортировки, фамилия есть в столбце u_name)
  Read table ot_fieldcat
    into ls_fcat
    with key fieldname = gcs_user_table-col_set-full-user_surname.
  ls_fcat-no_out = gc_true.
  Modify ot_fieldcat from ls_fcat index sy-tabix.

"Sort
  ls_sort-spos = 1.
  ls_sort-fieldname = gcs_user_table-col_set-full-department.
  ls_sort-down = gc_false.
  ls_sort-up = gc_true.
  Append ls_sort to ot_sort.

  ls_sort-spos = 2.
  ls_sort-fieldname = gcs_user_table-col_set-full-user_surname.
  ls_sort-down = gc_false.
  ls_sort-up = gc_true.
  Append ls_sort to ot_sort.

"Убрать кнопки
  ls_excl = cl_gui_alv_grid=>mc_mb_sum. "Кнопки "Суммы", "Подсуммы"
  Append ls_excl to ot_excl.

  ls_excl = cl_gui_alv_grid=>mc_fc_graph. "Кнопка "Графика"
  Append ls_excl to ot_excl.

  ls_excl = cl_gui_alv_grid=>mc_mb_variant. "Кнопки "Формат" — внешний вид
  Append ls_excl to ot_excl.

"Layout
  os_layout-edit = gc_false.
  os_layout-cwidth_opt = gc_true.
  os_layout-sel_mode = gcs-alv-sel_mode-d.
  os_layout-info_fname = gcs_log_table-alv_row_color.

Endform. "alv_3_prepare

*&-------------------------------------------------------------------*
*&   Показать/обновить грид типа 3 в контейнере класса cl_gui_docking_container
*& Данные для грида — в ot_data.
*& Структура и внешний вид грида задаются подпрограммой alv_3_prepare
*& из ракурса ZPMP006_4, который задан через глобальную константу
*& gcs_user_table-table_name.
*&
*&  -> iv_dynnr = номер экрана, на котором будет отображён ALV-грид
*&  -> iv_can_change_variant = разрешение изменять внешний вид грида
*& <-> ot_data = внутренняя таблица с данными из ракурса ZPMP006_4
*& <-> os_alv = набор объектов, необходимый для отображения ALV-грида
*&
*&-------------------------------------------------------------------*
Form alv_3_display
  using
    iv_dynnr type sy-dynnr
    iv_can_change_variant type boolean
  changing
    ot_data type ty_t_users
    os_alv type ty_s_alv-users.

  If os_alv-r_grid is initial.
    Create object os_alv-r_cont
      exporting
        repid         = sy-repid
        dynnr         = sy-dynnr
        side          = cl_gui_docking_container=>dock_at_top
        extension     = cl_gui_docking_container=>ws_maximizebox
      exceptions
        others        = 1
        .
    If sy-subrc <> 0.
      Message e000(SU)
        with 'Не удалось создать экземпляр'
             'docking-контейнера на экране'
             iv_dynnr.
      Exit.
    Endif.

    Create object os_alv-r_grid
      exporting
        i_parent          = os_alv-r_cont
      exceptions
        others            = 1
        .
    If sy-subrc <> 0.
      Message e000(SU)
        with 'Не удалось создать экземпляр ALV-Grid''а'
             'на экране'
             iv_dynnr.
      Exit.
    Endif.

    Perform alv_3_prepare
      using
        iv_dynnr
        iv_can_change_variant
      changing
        os_alv-t_fcat
        os_alv-t_sort
        os_alv-t_excl
        os_alv-s_layo
            .

    Call method os_alv-r_grid->set_table_for_first_display
      exporting
        is_layout                     = os_alv-s_layo
        i_save                        = gcs-alv-variant_save_modes-all
        it_toolbar_excluding          = os_alv-t_excl
      changing
        it_outtab                     = ot_data
        it_fieldcatalog               = os_alv-t_fcat
        it_sort                       = os_alv-t_sort
      exceptions
        others                        = 1
            .
    If sy-subrc <> 0.
      Message e000(SU)
        with 'Исключ. ситуация при вызове метода'
             'os_alv-r_grid->set_table_for_first_display'
             'на экране'
             iv_dynnr.
      Exit.
    Endif.

  Else.
  "Обновить грид, сохраняя горизонтальную/вертикальную позиции прокрутки
    Call method os_alv-r_grid->refresh_table_display
      exporting
        is_stable = gcs-alv-stable_refresh.
  Endif.
Endform. "alv_3_display

*&-------------------------------------------------------------------*
*&   Показать всплывающее окно со списком вариантов, сохранённых указанным
*& пользователем для гридов указанной программы, перенести выбранный
*& пользователем вариант в выходную переменную ov_variant (если выбор отменён,
*& то очистить переменную).
*&
*&  -> iv_repid = название программы
*&  -> iv_uname = имя пользователя
*& <-> ov_variant = вариант, выбранный пользователем из списка его вариантов.
*&-------------------------------------------------------------------*
Form get_variant_list
  using iv_repid type repid
        iv_uname type uname
  changing ov_variant type slis_vari.

  Data:
    ls_variant type disvariant,
    lv_save type c length 1.

  ls_variant-report = iv_repid.
  ls_variant-username = iv_uname.
  lv_save = 'U'. "показывать только варианты текущего пользователя

  Call function 'REUSE_ALV_VARIANT_F4'
    exporting
      is_variant                = ls_variant
*     i_tabname_header          =
*     i_tabname_item            =
*     it_default_fieldcat       =
    i_save                    = lv_save
*     i_display_via_grid        = ' '
    importing
*      e_exit                    =
      es_variant                = ls_variant
    exceptions
      not_found                 = 1
      program_error             = 2
      others                    = 3
            .
  If sy-subrc <> 0.
    Message id sy-msgid type sy-msgty number sy-msgno
            with sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
  Endif.
  ov_variant = ls_variant-variant.
Endform. "get_variant_list

*&-------------------------------------------------------------------*
*&   Проверить, есть ли заданный формат iv_variant в списке форматов ALV,
*& доступных для текущего пользователя в заданной программе. Если задано
*& пустое название формата, выдать, что проверка пройдена.
*&
*&  -> iv_variant = название формата
*&  -> iv_repid = название программы
*& <-> ov_correct = результат проверки (истина, если формат есть в списке или
*&                  не задан)
*&-------------------------------------------------------------------*
Form check_variant
  using iv_variant type slis_vari
        iv_repid type sy-repid
  changing ov_correct type boolean.

  Constants:
    lc_tool type c length 2 value 'LT'.

  Data:
  "Internal variant = тип "Вариант просмотра (внутреннее использование)"
    ls_int_variant type ltvariant, "#EC NEEDED смотри Read table ... ниже
    lt_int_variants type standard table of ltvariant,
  "variant name
    ls_variant type disvariant,
    lv_subrc type sy-subrc.

  If iv_variant is initial.
    ov_correct = gc_true.
    Exit.
  Endif.

  ov_correct = gc_false.

  ls_variant-report = iv_repid.

  Perform variants_read
   in program SAPLSKBS
              tables
                 lt_int_variants
              using
                 lc_tool
                 ls_variant
                 gc_true
                 gc_true
                 lv_subrc.

  Read table lt_int_variants
    into ls_int_variant
    with key variant = iv_variant.
  If sy-subrc = 0.
    ov_correct = gc_true.
  Endif.
Endform. "check_variant